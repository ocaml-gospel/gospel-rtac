(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Varray_circular_spec
module Ortac_runtime = Ortac_runtime_qcheck_stm
let inside i s =
  try
    if
      let __t1__001_ =
        Ortac_runtime.Gospelstdlib.(<=)
          (Ortac_runtime.Gospelstdlib.integer_of_int 0) i in
      let __t2__002_ =
        Ortac_runtime.Gospelstdlib.(<) i
          (Ortac_runtime.Gospelstdlib.Sequence.length s) in
      __t1__001_ && __t2__002_
    then true
    else false
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 4;
                   pos_bol = 378;
                   pos_cnum = 386
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 4;
                   pos_bol = 378;
                   pos_cnum = 412
                 }
             }))
let proj e =
  try e
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 14;
                   pos_bol = 1130;
                   pos_cnum = 1170
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 14;
                   pos_bol = 1130;
                   pos_cnum = 1171
                 }
             }))
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = char t
                             let init () = make 42 'a'
                           end)
module ModelElt =
  struct
    type nonrec elt = {
      contents: char Ortac_runtime.Gospelstdlib.sequence }
    let init =
      let n = 42
      and x_3 = 'a' in
      {
        contents =
          (try
             Ortac_runtime.Gospelstdlib.Sequence.init
               (Ortac_runtime.Gospelstdlib.integer_of_int n)
               (fun _ -> proj x_3)
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "varray_circular_spec.mli";
                            pos_lnum = 154;
                            pos_bol = 9141;
                            pos_cnum = 9168
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "varray_circular_spec.mli";
                            pos_lnum = 154;
                            pos_bol = 9141;
                            pos_cnum = 9201
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    module QCheck =
      struct
        include QCheck
        module Gen =
          struct include Gen
                 let int = small_signed_int
                 let elt gen = gen end
        module Shrink = struct include Shrink
                               let elt shrink = shrink end
      end
    module Util =
      struct module Pp = struct include Util.Pp
                                let pp_elt pp = pp end end
    type _ ty +=  
      | Elt: 'a ty -> 'a elt ty 
    let elt spec =
      let (ty, show) = spec in
      ((Elt ty), (fun x -> Printf.sprintf "Elt %s" (show x)))
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 2
    type state = Model.t
    let init_state = Model.create 2 ()
    type cmd =
      | Push_back of char elt 
      | Pop_back 
      | Push_front of char elt 
      | Pop_front 
      | Insert_at of int * char elt 
      | Pop_at of int 
      | Delete_at of int 
      | Get of int 
      | Set of int * char elt 
      | Length 
      | Make of int * char elt 
      | Empty of unit 
      | Is_empty 
      | Append 
      | Sub of int * int 
      | Copy 
      | Fill of int * int * char elt 
      | Blit of int * int * int 
    let show_cmd cmd__003_ =
      match cmd__003_ with
      | Push_back x ->
          Format.asprintf "%s <sut> %a" "push_back"
            (Util.Pp.pp_elt Util.Pp.pp_char true) x
      | Pop_back -> Format.asprintf "protect (fun () -> %s <sut>)" "pop_back"
      | Push_front x_1 ->
          Format.asprintf "%s <sut> %a" "push_front"
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_1
      | Pop_front ->
          Format.asprintf "protect (fun () -> %s <sut>)" "pop_front"
      | Insert_at (i_1, x_2) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "insert_at"
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_elt Util.Pp.pp_char true)
            x_2
      | Pop_at i_2 ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "pop_at"
            (Util.Pp.pp_int true) i_2
      | Delete_at i_3 ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "delete_at"
            (Util.Pp.pp_int true) i_3
      | Get i_4 ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "get"
            (Util.Pp.pp_int true) i_4
      | Set (i_5, v) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "set"
            (Util.Pp.pp_int true) i_5 (Util.Pp.pp_elt Util.Pp.pp_char true) v
      | Length -> Format.asprintf "%s <sut>" "length"
      | Make (n, x_3) ->
          Format.asprintf "protect (fun () -> %s %a %a)" "make"
            (Util.Pp.pp_int true) n (Util.Pp.pp_elt Util.Pp.pp_char true) x_3
      | Empty () -> Format.asprintf "%s %a" "empty" (Util.Pp.pp_unit true) ()
      | Is_empty -> Format.asprintf "%s <sut>" "is_empty"
      | Append -> Format.asprintf "%s <sut> <sut>" "append"
      | Sub (i_6, n_1) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "sub"
            (Util.Pp.pp_int true) i_6 (Util.Pp.pp_int true) n_1
      | Copy -> Format.asprintf "%s <sut>" "copy"
      | Fill (pos, len, x_4) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a %a)" "fill"
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_4
      | Blit (src_pos, dst_pos, len_1) ->
          Format.asprintf "protect (fun () -> %s <sut> %a <sut> %a %a)"
            "blit" (Util.Pp.pp_int true) src_pos (Util.Pp.pp_int true)
            dst_pos (Util.Pp.pp_int true) len_1
    let shrink_cmd cmd__004_ =
      let open QCheck in
        let open Shrink in
          let open Iter in
            match cmd__004_ with
            | Push_back x -> map (fun x -> Push_back x) (elt char x)
            | Pop_back -> empty
            | Push_front x_1 ->
                map (fun x_1 -> Push_front x_1) (elt char x_1)
            | Pop_front -> empty
            | Insert_at (i_1, x_2) ->
                (map (fun i_1 -> Insert_at (i_1, x_2)) (int i_1)) <+>
                  (map (fun x_2 -> Insert_at (i_1, x_2)) (elt char x_2))
            | Pop_at i_2 -> map (fun i_2 -> Pop_at i_2) (int i_2)
            | Delete_at i_3 -> map (fun i_3 -> Delete_at i_3) (int i_3)
            | Get i_4 -> map (fun i_4 -> Get i_4) (int i_4)
            | Set (i_5, v) ->
                (map (fun i_5 -> Set (i_5, v)) (int i_5)) <+>
                  (map (fun v -> Set (i_5, v)) (elt char v))
            | Length -> empty
            | Make (n, x_3) ->
                (map (fun n -> Make (n, x_3)) (int n)) <+>
                  (map (fun x_3 -> Make (n, x_3)) (elt char x_3))
            | Empty () -> map (fun () -> Empty ()) (unit ())
            | Is_empty -> empty
            | Append -> empty
            | Sub (i_6, n_1) ->
                (map (fun i_6 -> Sub (i_6, n_1)) (int i_6)) <+>
                  (map (fun n_1 -> Sub (i_6, n_1)) (int n_1))
            | Copy -> empty
            | Fill (pos, len, x_4) ->
                ((map (fun pos -> Fill (pos, len, x_4)) (int pos)) <+>
                   (map (fun len -> Fill (pos, len, x_4)) (int len)))
                  <+> (map (fun x_4 -> Fill (pos, len, x_4)) (elt char x_4))
            | Blit (src_pos, dst_pos, len_1) ->
                ((map (fun src_pos -> Blit (src_pos, dst_pos, len_1))
                    (int src_pos))
                   <+>
                   (map (fun dst_pos -> Blit (src_pos, dst_pos, len_1))
                      (int dst_pos)))
                  <+>
                  (map (fun len_1 -> Blit (src_pos, dst_pos, len_1))
                     (int len_1))
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd ~shrink:shrink_cmd
          (let open Gen in
             oneof
               [(pure (fun x -> Push_back x)) <*> (elt char);
               pure Pop_back;
               (pure (fun x_1 -> Push_front x_1)) <*> (elt char);
               pure Pop_front;
               ((pure (fun i_1 -> fun x_2 -> Insert_at (i_1, x_2))) <*> int)
                 <*> (elt char);
               (pure (fun i_2 -> Pop_at i_2)) <*> int;
               (pure (fun i_3 -> Delete_at i_3)) <*> int;
               (pure (fun i_4 -> Get i_4)) <*> int;
               ((pure (fun i_5 -> fun v -> Set (i_5, v))) <*> int) <*>
                 (elt char);
               pure Length;
               ((pure (fun n -> fun x_3 -> Make (n, x_3))) <*>
                  small_signed_int)
                 <*> (elt char);
               (pure (fun () -> Empty ())) <*> unit;
               pure Is_empty;
               pure Append;
               ((pure (fun i_6 -> fun n_1 -> Sub (i_6, n_1))) <*> int) <*>
                 int;
               pure Copy;
               (((pure
                    (fun pos -> fun len -> fun x_4 -> Fill (pos, len, x_4)))
                   <*> int)
                  <*> int)
                 <*> (elt char);
               (((pure
                    (fun src_pos ->
                       fun dst_pos ->
                         fun len_1 -> Blit (src_pos, dst_pos, len_1)))
                   <*> int)
                  <*> int)
                 <*> int])
    let next_state cmd__005_ state__006_ =
      match cmd__005_ with
      | Push_back x ->
          let t_1__007_ = Model.get state__006_ 0 in
          let t_1__008_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.snoc
                       t_1__007_.contents (proj x)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 23;
                                    pos_bol = 1629;
                                    pos_cnum = 1656
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 23;
                                    pos_bol = 1629;
                                    pos_cnum = 1695
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__006_ 1) t_1__008_
      | Pop_back ->
          let t_2__009_ = Model.get state__006_ 0 in
          let t_2__010_ =
            let open ModelElt in
              {
                contents =
                  (try
                     if
                       t_2__009_.contents =
                         Ortac_runtime.Gospelstdlib.Sequence.empty
                     then Ortac_runtime.Gospelstdlib.Sequence.empty
                     else
                       Ortac_runtime.Gospelstdlib.__mix_Bddub
                         t_2__009_.contents
                         (Ortac_runtime.Gospelstdlib.(-)
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               t_2__009_.contents)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 2))
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 30;
                                    pos_bol = 2142;
                                    pos_cnum = 2169
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 32;
                                    pos_bol = 2251;
                                    pos_cnum = 2339
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__006_ 1) t_2__010_
      | Push_front x_1 ->
          let t_3__011_ = Model.get state__006_ 0 in
          let t_3__012_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.cons (proj x_1)
                       t_3__011_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 44;
                                    pos_bol = 3126;
                                    pos_cnum = 3153
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 44;
                                    pos_bol = 3126;
                                    pos_cnum = 3192
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__006_ 1) t_3__012_
      | Pop_front ->
          let t_4__013_ = Model.get state__006_ 0 in
          let t_4__014_ =
            let open ModelElt in
              {
                contents =
                  (try
                     if
                       t_4__013_.contents =
                         Ortac_runtime.Gospelstdlib.Sequence.empty
                     then Ortac_runtime.Gospelstdlib.Sequence.empty
                     else
                       Ortac_runtime.Gospelstdlib.Sequence.tl
                         t_4__013_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 53;
                                    pos_bol = 3714;
                                    pos_cnum = 3741
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 55;
                                    pos_bol = 3823;
                                    pos_cnum = 3883
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__006_ 1) t_4__014_
      | Insert_at (i_1, x_2) ->
          let t_5__015_ = Model.get state__006_ 0 in
          if
            (try
               let __t1__019_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
               let __t2__020_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      t_5__015_.contents) in
               __t1__019_ && __t2__020_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 72;
                              pos_bol = 4784;
                              pos_cnum = 4797
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 72;
                              pos_bol = 4784;
                              pos_cnum = 4833
                            }
                        })))
          then
            let t_5__018_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       if
                         let __t1__016_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                         let __t2__017_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                             (Ortac_runtime.Gospelstdlib.Sequence.length
                                t_5__015_.contents) in
                         __t1__016_ && __t2__017_
                       then
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Bddub
                              t_5__015_.contents
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    i_1)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                           (Ortac_runtime.Gospelstdlib.Sequence.cons
                              (proj x_2)
                              (Ortac_runtime.Gospelstdlib.__mix_Buddb
                                 t_5__015_.contents
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    i_1)))
                       else t_5__015_.contents
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 74;
                                      pos_bol = 4860;
                                      pos_cnum = 4891
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 76;
                                      pos_bol = 5033;
                                      pos_cnum = 5081
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 1) t_5__018_
          else state__006_
      | Pop_at i_2 ->
          let t_6__021_ = Model.get state__006_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                  t_6__021_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 89;
                              pos_bol = 5727;
                              pos_cnum = 5740
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 89;
                              pos_bol = 5727;
                              pos_cnum = 5759
                            }
                        })))
          then
            let t_6__022_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.(++)
                         (Ortac_runtime.Gospelstdlib.__mix_Bddub
                            t_6__021_.contents
                            (Ortac_runtime.Gospelstdlib.(-)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                         (Ortac_runtime.Gospelstdlib.__mix_Buddb
                            t_6__021_.contents
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 91;
                                      pos_bol = 5786;
                                      pos_cnum = 5838
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 91;
                                      pos_bol = 5786;
                                      pos_cnum = 5840
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 1) t_6__022_
          else state__006_
      | Delete_at i_3 ->
          let t_7__023_ = Model.get state__006_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                  t_7__023_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 102;
                              pos_bol = 6426;
                              pos_cnum = 6439
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 102;
                              pos_bol = 6426;
                              pos_cnum = 6458
                            }
                        })))
          then
            let t_7__024_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.(++)
                         (Ortac_runtime.Gospelstdlib.__mix_Bddub
                            t_7__023_.contents
                            (Ortac_runtime.Gospelstdlib.(-)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                         (Ortac_runtime.Gospelstdlib.__mix_Buddb
                            t_7__023_.contents
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 104;
                                      pos_bol = 6485;
                                      pos_cnum = 6537
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 104;
                                      pos_bol = 6485;
                                      pos_cnum = 6539
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 1) t_7__024_
          else state__006_
      | Get i_4 ->
          let t_8__025_ = Model.get state__006_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                  t_8__025_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 128;
                              pos_bol = 7616;
                              pos_cnum = 7629
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 128;
                              pos_bol = 7616;
                              pos_cnum = 7648
                            }
                        })))
          then
            let t_8__026_ = t_8__025_ in
            Model.push (Model.drop_n state__006_ 1) t_8__026_
          else state__006_
      | Set (i_5, v) ->
          let t_9__027_ = Model.get state__006_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                  t_9__027_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8077;
                              pos_cnum = 8090
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8077;
                              pos_cnum = 8109
                            }
                        })))
          then
            let t_9__028_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.set
                         t_9__027_.contents
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                         (proj v)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 139;
                                      pos_bol = 8136;
                                      pos_cnum = 8163
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 139;
                                      pos_bol = 8136;
                                      pos_cnum = 8203
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 1) t_9__028_
          else state__006_
      | Length ->
          let t_10__029_ = Model.get state__006_ 0 in
          let t_10__030_ = t_10__029_ in
          Model.push (Model.drop_n state__006_ 1) t_10__030_
      | Make (n, x_3) ->
          if
            (try
               Ortac_runtime.Gospelstdlib.(>=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int n)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 153;
                              pos_bol = 9121;
                              pos_cnum = 9134
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 153;
                              pos_bol = 9121;
                              pos_cnum = 9140
                            }
                        })))
          then
            let t_11__032_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.integer_of_int n)
                         (fun _ -> proj x_3)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 154;
                                      pos_bol = 9141;
                                      pos_cnum = 9168
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 154;
                                      pos_bol = 9141;
                                      pos_cnum = 9201
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 0) t_11__032_
          else state__006_
      | Empty () ->
          let t_12__034_ =
            let open ModelElt in
              {
                contents =
                  (try Ortac_runtime.Gospelstdlib.Sequence.empty
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 166;
                                    pos_bol = 9795;
                                    pos_cnum = 9822
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 166;
                                    pos_bol = 9795;
                                    pos_cnum = 9836
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__006_ 0) t_12__034_
      | Is_empty ->
          let t_13__035_ = Model.get state__006_ 0 in
          let t_13__036_ = t_13__035_ in
          Model.push (Model.drop_n state__006_ 1) t_13__036_
      | Append ->
          let a_1__037_ = Model.get state__006_ 0
          and b__038_ = Model.get state__006_ 1 in
          let t_14__042_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++) a_1__037_.contents
                       b__038_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 179;
                                    pos_bol = 10714;
                                    pos_cnum = 10752
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 179;
                                    pos_bol = 10714;
                                    pos_cnum = 10754
                                  }
                              })))
              }
          and a_1__041_ = a_1__037_
          and b__040_ = b__038_ in
          Model.push
            (Model.push (Model.push (Model.drop_n state__006_ 2) b__040_)
               a_1__041_) t_14__042_
      | Sub (i_6, n_1) ->
          let t_15__043_ = Model.get state__006_ 0 in
          if
            (try
               let __t1__047_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_6) in
               let __t2__048_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      t_15__043_.contents) in
               __t1__047_ && __t2__048_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 194;
                              pos_bol = 11847;
                              pos_cnum = 11860
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 194;
                              pos_bol = 11847;
                              pos_cnum = 11896
                            }
                        })))
              &&
              ((try
                  let __t1__049_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1)) in
                  let __t2__050_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1))
                      (Ortac_runtime.Gospelstdlib.Sequence.length
                         t_15__043_.contents) in
                  __t1__049_ && __t2__050_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 195;
                                 pos_bol = 11897;
                                 pos_cnum = 11910
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 195;
                                 pos_bol = 11897;
                                 pos_cnum = 11950
                               }
                           }))))
          then
            let r__046_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then Ortac_runtime.Gospelstdlib.Sequence.empty
                       else
                         Ortac_runtime.Gospelstdlib.__mix_Buddub
                           t_15__043_.contents
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    i_6)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    n_1))
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 196;
                                      pos_bol = 11951;
                                      pos_cnum = 11978
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 196;
                                      pos_bol = 11951;
                                      pos_cnum = 12032
                                    }
                                })))
                }
            and t_15__045_ = t_15__043_ in
            Model.push (Model.push (Model.drop_n state__006_ 1) t_15__045_)
              r__046_
          else state__006_
      | Copy ->
          let t_16__051_ = Model.get state__006_ 0 in
          let r_1__054_ =
            let open ModelElt in
              {
                contents =
                  (try t_16__051_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 202;
                                    pos_bol = 12444;
                                    pos_cnum = 12471
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 202;
                                    pos_bol = 12444;
                                    pos_cnum = 12481
                                  }
                              })))
              }
          and t_16__053_ = t_16__051_ in
          Model.push (Model.push (Model.drop_n state__006_ 1) t_16__053_)
            r_1__054_
      | Fill (pos, len, x_4) ->
          let t_17__055_ = Model.get state__006_ 0 in
          if
            (try
               let __t1__059_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
               let __t2__060_ =
                 let __t1__061_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                 let __t2__062_ =
                   Ortac_runtime.Gospelstdlib.(<)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len))
                     (Ortac_runtime.Gospelstdlib.Sequence.length
                        t_17__055_.contents) in
                 __t1__061_ && __t2__062_ in
               __t1__059_ && __t2__060_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 211;
                              pos_bol = 12970;
                              pos_cnum = 12983
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 211;
                              pos_bol = 12970;
                              pos_cnum = 13045
                            }
                        })))
          then
            let t_17__058_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            t_17__055_.contents)
                         (fun i_7 ->
                            if
                              let __t1__056_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     pos) i_7 in
                              let __t2__057_ =
                                Ortac_runtime.Gospelstdlib.(<) i_7
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        pos)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        len)) in
                              __t1__056_ && __t2__057_
                            then proj x_4
                            else
                              Ortac_runtime.Gospelstdlib.__mix_Bub
                                t_17__055_.contents i_7)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 213;
                                      pos_bol = 13072;
                                      pos_cnum = 13099
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 213;
                                      pos_bol = 13072;
                                      pos_cnum = 13219
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__006_ 1) t_17__058_
          else state__006_
      | Blit (src_pos, dst_pos, len_1) ->
          let src__063_ = Model.get state__006_ 0
          and dst__064_ = Model.get state__006_ 1 in
          if
            (try
               let __t1__067_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int src_pos) in
               let __t2__068_ =
                 let __t1__069_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.integer_of_int src_pos)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int src_pos)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len_1)) in
                 let __t2__070_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int src_pos)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len_1))
                     (Ortac_runtime.Gospelstdlib.Sequence.length
                        src__063_.contents) in
                 __t1__069_ && __t2__070_ in
               __t1__067_ && __t2__068_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 223;
                              pos_bol = 13939;
                              pos_cnum = 13952
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 223;
                              pos_bol = 13939;
                              pos_cnum = 14013
                            }
                        })))
              &&
              ((try
                  let __t1__071_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                      (Ortac_runtime.Gospelstdlib.integer_of_int dst_pos) in
                  let __t2__072_ =
                    let __t1__073_ =
                      Ortac_runtime.Gospelstdlib.(<=)
                        (Ortac_runtime.Gospelstdlib.integer_of_int dst_pos)
                        (Ortac_runtime.Gospelstdlib.(+)
                           (Ortac_runtime.Gospelstdlib.integer_of_int dst_pos)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len_1)) in
                    let __t2__074_ =
                      Ortac_runtime.Gospelstdlib.(<=)
                        (Ortac_runtime.Gospelstdlib.(+)
                           (Ortac_runtime.Gospelstdlib.integer_of_int dst_pos)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len_1))
                        (Ortac_runtime.Gospelstdlib.Sequence.length
                           dst__064_.contents) in
                    __t1__073_ && __t2__074_ in
                  __t1__071_ && __t2__072_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 224;
                                 pos_bol = 14014;
                                 pos_cnum = 14027
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 224;
                                 pos_bol = 14014;
                                 pos_cnum = 14088
                               }
                           }))))
          then
            let src__066_ = src__063_
            and dst__065_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int dst_pos)
                           = (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddub
                              src__063_.contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int
                                 src_pos)
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       src_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_1))
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              dst__064_.contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int
                                 len_1))
                       else
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.(++)
                              (Ortac_runtime.Gospelstdlib.__mix_Bddub
                                 dst__064_.contents
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       dst_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       1)))
                              (Ortac_runtime.Gospelstdlib.__mix_Buddub
                                 src__063_.contents
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    src_pos)
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    (Ortac_runtime.Gospelstdlib.(+)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          src_pos)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          len_1))
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       1))))
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              dst__064_.contents
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    dst_pos)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_1)))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 227;
                                      pos_bol = 14146;
                                      pos_cnum = 14154
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "varray_circular_spec.mli";
                                      pos_lnum = 229;
                                      pos_bol = 14333;
                                      pos_cnum = 14378
                                    }
                                })))
                } in
            Model.push (Model.push (Model.drop_n state__006_ 2) dst__065_)
              src__066_
          else state__006_
    let precond cmd__139_ state__140_ =
      match cmd__139_ with
      | Push_back x -> true
      | Pop_back -> true
      | Push_front x_1 -> true
      | Pop_front -> true
      | Insert_at (i_1, x_2) -> true
      | Pop_at i_2 -> true
      | Delete_at i_3 -> true
      | Get i_4 -> true
      | Set (i_5, v) -> true
      | Length -> true
      | Make (n, x_3) -> true
      | Empty () -> true
      | Is_empty -> true
      | Append -> true
      | Sub (i_6, n_1) -> true
      | Copy -> true
      | Fill (pos, len, x_4) -> true
      | Blit (src_pos, dst_pos, len_1) -> true
    let postcond _ _ _ = true
    let run cmd__141_ sut__142_ =
      match cmd__141_ with
      | Push_back x ->
          Res
            (unit,
              (let t_1__143_ = SUT.pop sut__142_ in
               let res__144_ = push_back t_1__143_ x in
               (SUT.push sut__142_ t_1__143_; res__144_)))
      | Pop_back ->
          Res
            ((result (elt char) exn),
              (let t_2__145_ = SUT.pop sut__142_ in
               let res__146_ = protect (fun () -> pop_back t_2__145_) () in
               (SUT.push sut__142_ t_2__145_; res__146_)))
      | Push_front x_1 ->
          Res
            (unit,
              (let t_3__147_ = SUT.pop sut__142_ in
               let res__148_ = push_front t_3__147_ x_1 in
               (SUT.push sut__142_ t_3__147_; res__148_)))
      | Pop_front ->
          Res
            ((result (elt char) exn),
              (let t_4__149_ = SUT.pop sut__142_ in
               let res__150_ = protect (fun () -> pop_front t_4__149_) () in
               (SUT.push sut__142_ t_4__149_; res__150_)))
      | Insert_at (i_1, x_2) ->
          Res
            ((result unit exn),
              (let t_5__151_ = SUT.pop sut__142_ in
               let res__152_ =
                 protect (fun () -> insert_at t_5__151_ i_1 x_2) () in
               (SUT.push sut__142_ t_5__151_; res__152_)))
      | Pop_at i_2 ->
          Res
            ((result (elt char) exn),
              (let t_6__153_ = SUT.pop sut__142_ in
               let res__154_ = protect (fun () -> pop_at t_6__153_ i_2) () in
               (SUT.push sut__142_ t_6__153_; res__154_)))
      | Delete_at i_3 ->
          Res
            ((result unit exn),
              (let t_7__155_ = SUT.pop sut__142_ in
               let res__156_ = protect (fun () -> delete_at t_7__155_ i_3) () in
               (SUT.push sut__142_ t_7__155_; res__156_)))
      | Get i_4 ->
          Res
            ((result (elt char) exn),
              (let t_8__157_ = SUT.pop sut__142_ in
               let res__158_ = protect (fun () -> get t_8__157_ i_4) () in
               (SUT.push sut__142_ t_8__157_; res__158_)))
      | Set (i_5, v) ->
          Res
            ((result unit exn),
              (let t_9__159_ = SUT.pop sut__142_ in
               let res__160_ = protect (fun () -> set t_9__159_ i_5 v) () in
               (SUT.push sut__142_ t_9__159_; res__160_)))
      | Length ->
          Res
            (int,
              (let t_10__161_ = SUT.pop sut__142_ in
               let res__162_ = length t_10__161_ in
               (SUT.push sut__142_ t_10__161_; res__162_)))
      | Make (n, x_3) ->
          Res
            ((result sut exn),
              (let res__163_ = protect (fun () -> make n x_3) () in
               ((match res__163_ with
                 | Ok res -> SUT.push sut__142_ res
                 | Error _ -> ());
                res__163_)))
      | Empty () ->
          Res
            (sut,
              (let res__164_ = empty () in
               (SUT.push sut__142_ res__164_; res__164_)))
      | Is_empty ->
          Res
            (bool,
              (let t_13__165_ = SUT.pop sut__142_ in
               let res__166_ = is_empty t_13__165_ in
               (SUT.push sut__142_ t_13__165_; res__166_)))
      | Append ->
          Res
            (sut,
              (let a_1__167_ = SUT.pop sut__142_ in
               let b__168_ = SUT.pop sut__142_ in
               let res__169_ = append a_1__167_ b__168_ in
               (SUT.push sut__142_ b__168_;
                SUT.push sut__142_ a_1__167_;
                SUT.push sut__142_ res__169_;
                res__169_)))
      | Sub (i_6, n_1) ->
          Res
            ((result sut exn),
              (let t_15__170_ = SUT.pop sut__142_ in
               let res__171_ = protect (fun () -> sub t_15__170_ i_6 n_1) () in
               (SUT.push sut__142_ t_15__170_;
                (match res__171_ with
                 | Ok res -> SUT.push sut__142_ res
                 | Error _ -> ());
                res__171_)))
      | Copy ->
          Res
            (sut,
              (let t_16__172_ = SUT.pop sut__142_ in
               let res__173_ = copy t_16__172_ in
               (SUT.push sut__142_ t_16__172_;
                SUT.push sut__142_ res__173_;
                res__173_)))
      | Fill (pos, len, x_4) ->
          Res
            ((result unit exn),
              (let t_17__174_ = SUT.pop sut__142_ in
               let res__175_ =
                 protect (fun () -> fill t_17__174_ pos len x_4) () in
               (SUT.push sut__142_ t_17__174_; res__175_)))
      | Blit (src_pos, dst_pos, len_1) ->
          Res
            ((result unit exn),
              (let src__176_ = SUT.pop sut__142_ in
               let dst__177_ = SUT.pop sut__142_ in
               let res__178_ =
                 protect
                   (fun () -> blit src__176_ src_pos dst__177_ dst_pos len_1)
                   () in
               (SUT.push sut__142_ dst__177_;
                SUT.push sut__142_ src__176_;
                res__178_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_show_cmd cmd__180_ state__181_ last__183_ res__182_ =
  let open Spec in
    let open STM in
      match (cmd__180_, res__182_) with
      | (Push_back x, Res ((Unit, _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s %a" lhs "push_back"
            (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_elt Util.Pp.pp_char true) x
      | (Pop_back, Res ((Result (Elt (Char), Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s)" lhs "pop_back"
            (SUT.get_name state__181_ (0 + shift))
      | (Push_front x_1, Res ((Unit, _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s %a" lhs "push_front"
            (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_1
      | (Pop_front, Res ((Result (Elt (Char), Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s)" lhs
            "pop_front" (SUT.get_name state__181_ (0 + shift))
      | (Insert_at (i_1, x_2), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "insert_at" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_elt Util.Pp.pp_char true)
            x_2
      | (Pop_at i_2, Res ((Result (Elt (Char), Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs
            "pop_at" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) i_2
      | (Delete_at i_3, Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs
            "delete_at" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) i_3
      | (Get i_4, Res ((Result (Elt (Char), Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs "get"
            (SUT.get_name state__181_ (0 + shift)) (Util.Pp.pp_int true) i_4
      | (Set (i_5, v), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "set" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) i_5 (Util.Pp.pp_elt Util.Pp.pp_char true) v
      | (Length, Res ((Int, _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "length"
            (SUT.get_name state__181_ (0 + shift))
      | (Make (n, x_3), Res ((Result (SUT, Exn), _), t_11)) ->
          let lhs =
            if last__183_
            then "r"
            else
              (match t_11 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__181_ 0)
               | Error _ -> "_")
          and shift = match t_11 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %a %a)" lhs "make"
            (Util.Pp.pp_int true) n (Util.Pp.pp_elt Util.Pp.pp_char true) x_3
      | (Empty (), Res ((SUT, _), t_12)) ->
          let lhs = if last__183_ then "r" else SUT.get_name state__181_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %a" lhs "empty" (Util.Pp.pp_unit true)
            ()
      | (Is_empty, Res ((Bool, _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "is_empty"
            (SUT.get_name state__181_ (0 + shift))
      | (Append, Res ((SUT, _), t_14)) ->
          let lhs = if last__183_ then "r" else SUT.get_name state__181_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %s" lhs "append"
            (SUT.get_name state__181_ (0 + shift))
            (SUT.get_name state__181_ (1 + shift))
      | (Sub (i_6, n_1), Res ((Result (SUT, Exn), _), r)) ->
          let lhs =
            if last__183_
            then "r"
            else
              (match r with
               | Ok _ -> "Ok " ^ (SUT.get_name state__181_ 0)
               | Error _ -> "_")
          and shift = match r with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "sub" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) i_6 (Util.Pp.pp_int true) n_1
      | (Copy, Res ((SUT, _), r_1)) ->
          let lhs = if last__183_ then "r" else SUT.get_name state__181_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "copy"
            (SUT.get_name state__181_ (0 + shift))
      | (Fill (pos, len, x_4), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a %a)" lhs
            "fill" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_4
      | (Blit (src_pos, dst_pos, len_1), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__183_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %s %a %a)"
            lhs "blit" (SUT.get_name state__181_ (0 + shift))
            (Util.Pp.pp_int true) src_pos
            (SUT.get_name state__181_ (1 + shift)) (Util.Pp.pp_int true)
            dst_pos (Util.Pp.pp_int true) len_1
      | _ -> assert false
let ortac_postcond cmd__075_ state__076_ res__077_ =
  let open Spec in
    let open STM in
      let new_state__078_ = lazy (next_state cmd__075_ state__076_) in
      match (cmd__075_, res__077_) with
      | (Push_back x, Res ((Unit, _), _)) -> None
      | (Pop_back, Res ((Result (Elt (Char), Exn), _), x_5)) ->
          (match x_5 with
           | Ok x_5 ->
               if
                 let t_old__080_ = Model.get state__076_ 0
                 and t_new__081_ =
                   lazy (Model.get (Lazy.force new_state__078_) 0) in
                 (try
                    if
                      t_old__080_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      (proj x_5) =
                        (Ortac_runtime.Gospelstdlib.__mix_Bub
                           t_old__080_.contents
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 t_old__080_.contents)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 33;
                                   pos_bol = 2340;
                                   pos_cnum = 2354
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 35;
                                   pos_bol = 2414;
                                   pos_cnum = 2496
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Ortac_runtime.Protected_value
                         (Res (Ortac_runtime.dummy, ()))) "pop_back"
                      [("if old t.contents = Sequence.empty\n              then false\n              else proj x = (old t.contents)[Sequence.length (old t.contents) - 1]",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 33;
                               pos_bol = 2340;
                               pos_cnum = 2354
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 35;
                               pos_bol = 2414;
                               pos_cnum = 2496
                             }
                         })])
           | Error (Not_found) ->
               if
                 let t_old__082_ = Model.get state__076_ 0
                 and t_new__083_ =
                   lazy (Model.get (Lazy.force new_state__078_) 0) in
                 (try
                    let __t1__084_ =
                      (Lazy.force t_new__083_).contents =
                        t_old__082_.contents in
                    let __t2__085_ =
                      t_old__082_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    __t1__084_ && __t2__085_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 36;
                                   pos_bol = 2497;
                                   pos_cnum = 2523
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 36;
                                   pos_bol = 2497;
                                   pos_cnum = 2567
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Ortac_runtime.Exception "Not_found") "pop_back"
                      [("t.contents = old t.contents = Sequence.empty",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 36;
                               pos_bol = 2497;
                               pos_cnum = 2523
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 36;
                               pos_bol = 2497;
                               pos_cnum = 2567
                             }
                         })])
           | _ -> None)
      | (Push_front x_1, Res ((Unit, _), _)) -> None
      | (Pop_front, Res ((Result (Elt (Char), Exn), _), x_6)) ->
          (match x_6 with
           | Ok x_6 ->
               if
                 let t_old__088_ = Model.get state__076_ 0
                 and t_new__089_ =
                   lazy (Model.get (Lazy.force new_state__078_) 0) in
                 (try
                    if
                      t_old__088_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      (proj x_6) =
                        (Ortac_runtime.Gospelstdlib.Sequence.hd
                           t_old__088_.contents)
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 56;
                                   pos_bol = 3884;
                                   pos_cnum = 3898
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 58;
                                   pos_bol = 3958;
                                   pos_cnum = 4014
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Ortac_runtime.Protected_value
                         (Res (Ortac_runtime.dummy, ()))) "pop_front"
                      [("if old t.contents = Sequence.empty\n              then false\n              else proj x = Sequence.hd (old t.contents)",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 56;
                               pos_bol = 3884;
                               pos_cnum = 3898
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 58;
                               pos_bol = 3958;
                               pos_cnum = 4014
                             }
                         })])
           | Error (Not_found) ->
               if
                 let t_old__090_ = Model.get state__076_ 0
                 and t_new__091_ =
                   lazy (Model.get (Lazy.force new_state__078_) 0) in
                 (try
                    let __t1__092_ =
                      (Lazy.force t_new__091_).contents =
                        t_old__090_.contents in
                    let __t2__093_ =
                      t_old__090_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    __t1__092_ && __t2__093_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 59;
                                   pos_bol = 4015;
                                   pos_cnum = 4041
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 59;
                                   pos_bol = 4015;
                                   pos_cnum = 4085
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Ortac_runtime.Exception "Not_found") "pop_front"
                      [("t.contents = old t.contents = Sequence.empty",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 59;
                               pos_bol = 4015;
                               pos_cnum = 4041
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 59;
                               pos_bol = 4015;
                               pos_cnum = 4085
                             }
                         })])
           | _ -> None)
      | (Insert_at (i_1, x_2), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__095_ = Model.get state__076_ 0 in
                   try
                     let __t1__096_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                     let __t2__097_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            tmp__095_.contents) in
                     __t1__096_ && __t2__097_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4797
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4833
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument")
                        "insert_at"
                        [("0 <= i <= Sequence.length t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 72;
                                 pos_bol = 4784;
                                 pos_cnum = 4797
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 72;
                                 pos_bol = 4784;
                                 pos_cnum = 4833
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__095_ = Model.get state__076_ 0 in
                      (try
                         let __t1__096_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                         let __t2__097_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                             (Ortac_runtime.Gospelstdlib.Sequence.length
                                tmp__095_.contents) in
                         __t1__096_ && __t2__097_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 72;
                                        pos_bol = 4784;
                                        pos_cnum = 4797
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 72;
                                        pos_bol = 4784;
                                        pos_cnum = 4833
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "insert_at"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4797
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4833
                                  }
                              })])))
      | (Pop_at i_2, Res ((Result (Elt (Char), Exn), _), x_7)) ->
          (match if
                   let tmp__100_ = Model.get state__076_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                        tmp__100_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5740
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5759
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "pop_at"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 89;
                                 pos_bol = 5727;
                                 pos_cnum = 5740
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 89;
                                 pos_bol = 5727;
                                 pos_cnum = 5759
                               }
                           })])
           with
           | None ->
               (match x_7 with
                | Ok x_7 ->
                    if
                      let t_old__098_ = Model.get state__076_ 0
                      and t_new__099_ =
                        lazy (Model.get (Lazy.force new_state__078_) 0) in
                      (try
                         (proj x_7) =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              t_old__098_.contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_2))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 92;
                                        pos_bol = 5864;
                                        pos_cnum = 5878
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 92;
                                        pos_bol = 5864;
                                        pos_cnum = 5906
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Protected_value
                              (Res (Ortac_runtime.dummy, ()))) "pop_at"
                           [("(proj x) = old t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 92;
                                    pos_bol = 5864;
                                    pos_cnum = 5878
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 92;
                                    pos_bol = 5864;
                                    pos_cnum = 5906
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match x_7 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__100_ = Model.get state__076_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                            tmp__100_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 89;
                                        pos_bol = 5727;
                                        pos_cnum = 5740
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 89;
                                        pos_bol = 5727;
                                        pos_cnum = 5759
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "pop_at"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5740
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5759
                                  }
                              })])))
      | (Delete_at i_3, Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__103_ = Model.get state__076_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                        tmp__103_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6439
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6458
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument")
                        "delete_at"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 102;
                                 pos_bol = 6426;
                                 pos_cnum = 6439
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 102;
                                 pos_bol = 6426;
                                 pos_cnum = 6458
                               }
                           })])
           with
           | None ->
               (match res with
                | Ok _ ->
                    if
                      let t_old__101_ = Model.get state__076_ 0
                      and t_new__102_ =
                        lazy (Model.get (Lazy.force new_state__078_) 0) in
                      (try
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            (Lazy.force t_new__102_).contents)
                           =
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 t_old__101_.contents)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 105;
                                        pos_bol = 6563;
                                        pos_cnum = 6577
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 105;
                                        pos_bol = 6563;
                                        pos_cnum = 6642
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Protected_value (Res (unit, ())))
                           "delete_at"
                           [("Sequence.length t.contents = Sequence.length (old t.contents) - 1",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 105;
                                    pos_bol = 6563;
                                    pos_cnum = 6577
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 105;
                                    pos_bol = 6563;
                                    pos_cnum = 6642
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__103_ = Model.get state__076_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            tmp__103_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 102;
                                        pos_bol = 6426;
                                        pos_cnum = 6439
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 102;
                                        pos_bol = 6426;
                                        pos_cnum = 6458
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "delete_at"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6439
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6458
                                  }
                              })])))
      | (Get i_4, Res ((Result (Elt (Char), Exn), _), x_8)) ->
          (match if
                   let tmp__106_ = Model.get state__076_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                        tmp__106_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7629
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7648
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "get"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 128;
                                 pos_bol = 7616;
                                 pos_cnum = 7629
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 128;
                                 pos_bol = 7616;
                                 pos_cnum = 7648
                               }
                           })])
           with
           | None ->
               (match x_8 with
                | Ok x_8 ->
                    if
                      let t_old__104_ = Model.get state__076_ 0
                      and t_new__105_ =
                        lazy (Model.get (Lazy.force new_state__078_) 0) in
                      (try
                         (proj x_8) =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force t_new__105_).contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_4))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 127;
                                        pos_bol = 7577;
                                        pos_cnum = 7591
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 127;
                                        pos_bol = 7577;
                                        pos_cnum = 7615
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Protected_value
                              (Res (Ortac_runtime.dummy, ()))) "get"
                           [("(proj x) = t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 127;
                                    pos_bol = 7577;
                                    pos_cnum = 7591
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 127;
                                    pos_bol = 7577;
                                    pos_cnum = 7615
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match x_8 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__106_ = Model.get state__076_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                            tmp__106_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 128;
                                        pos_bol = 7616;
                                        pos_cnum = 7629
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 128;
                                        pos_bol = 7616;
                                        pos_cnum = 7648
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "get"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7629
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7648
                                  }
                              })])))
      | (Set (i_5, v), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__107_ = Model.get state__076_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                        tmp__107_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8090
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8109
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "set"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 137;
                                 pos_bol = 8077;
                                 pos_cnum = 8090
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 137;
                                 pos_bol = 8077;
                                 pos_cnum = 8109
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__107_ = Model.get state__076_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                            tmp__107_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 137;
                                        pos_bol = 8077;
                                        pos_cnum = 8090
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 137;
                                        pos_bol = 8077;
                                        pos_cnum = 8109
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "set"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8090
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8109
                                  }
                              })])))
      | (Length, Res ((Int, _), l)) ->
          if
            let t_old__110_ = Model.get state__076_ 0
            and t_new__111_ = lazy (Model.get (Lazy.force new_state__078_) 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int l) =
                 (Ortac_runtime.Gospelstdlib.Sequence.length
                    (Lazy.force t_new__111_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 144;
                              pos_bol = 8634;
                              pos_cnum = 8648
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 144;
                              pos_bol = 8634;
                              pos_cnum = 8678
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                 (Ortac_runtime.Value
                    (Res
                       (integer,
                         (let t_old__108_ = Model.get state__076_ 0
                          and t_new__109_ =
                            lazy (Model.get (Lazy.force new_state__078_) 0) in
                          try
                            Ortac_runtime.Gospelstdlib.Sequence.length
                              (Lazy.force t_new__109_).contents
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname =
                                             "varray_circular_spec.mli";
                                           pos_lnum = 144;
                                           pos_bol = 8634;
                                           pos_cnum = 8652
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname =
                                             "varray_circular_spec.mli";
                                           pos_lnum = 144;
                                           pos_bol = 8634;
                                           pos_cnum = 8678
                                         }
                                     })))))) "length"
                 [("l = Sequence.length t.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 144;
                          pos_bol = 8634;
                          pos_cnum = 8648
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 144;
                          pos_bol = 8634;
                          pos_cnum = 8678
                        }
                    })])
      | (Make (n, x_3), Res ((Result (SUT, Exn), _), t_11)) ->
          (match if
                   try
                     Ortac_runtime.Gospelstdlib.(>=)
                       (Ortac_runtime.Gospelstdlib.integer_of_int n)
                       (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 153;
                                    pos_bol = 9121;
                                    pos_cnum = 9134
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 153;
                                    pos_bol = 9121;
                                    pos_cnum = 9140
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "make"
                        [("n >= 0",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 153;
                                 pos_bol = 9121;
                                 pos_cnum = 9134
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 153;
                                 pos_bol = 9121;
                                 pos_cnum = 9140
                               }
                           })])
           with
           | None -> (match t_11 with | Ok t_11 -> None | _ -> None)
           | _ ->
               (match t_11 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      (try
                         Ortac_runtime.Gospelstdlib.(>=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 153;
                                        pos_bol = 9121;
                                        pos_cnum = 9134
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 153;
                                        pos_bol = 9121;
                                        pos_cnum = 9140
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "make"
                           [("n >= 0",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 153;
                                    pos_bol = 9121;
                                    pos_cnum = 9134
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 153;
                                    pos_bol = 9121;
                                    pos_cnum = 9140
                                  }
                              })])))
      | (Empty (), Res ((SUT, _), t_12)) -> None
      | (Is_empty, Res ((Bool, _), b_1)) ->
          if
            let t_old__113_ = Model.get state__076_ 0
            and t_new__114_ = lazy (Model.get (Lazy.force new_state__078_) 0) in
            (try
               (b_1 = true) =
                 ((Lazy.force t_new__114_).contents =
                    Ortac_runtime.Gospelstdlib.Sequence.empty)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 171;
                              pos_bol = 10238;
                              pos_cnum = 10252
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 171;
                              pos_bol = 10238;
                              pos_cnum = 10285
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                 (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ())))
                 "is_empty"
                 [("b <-> t.contents = Sequence.empty",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 171;
                          pos_bol = 10238;
                          pos_cnum = 10252
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 171;
                          pos_bol = 10238;
                          pos_cnum = 10285
                        }
                    })])
      | (Append, Res ((SUT, _), t_14)) -> None
      | (Sub (i_6, n_1), Res ((Result (SUT, Exn), _), r)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__118_ = Model.get state__076_ 0 in
                      try
                        let __t1__119_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_6) in
                        let __t2__120_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__118_.contents) in
                        __t1__119_ && __t2__120_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 194;
                                       pos_bol = 11847;
                                       pos_cnum = 11860
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 194;
                                       pos_bol = 11847;
                                       pos_cnum = 11896
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 194;
                                    pos_bol = 11847;
                                    pos_cnum = 11860
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 194;
                                    pos_bol = 11847;
                                    pos_cnum = 11896
                                  }
                              })]))
                   (if
                      let tmp__118_ = Model.get state__076_ 0 in
                      try
                        let __t1__121_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n_1)) in
                        let __t2__122_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n_1))
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__118_.contents) in
                        __t1__121_ && __t2__122_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 195;
                                       pos_bol = 11897;
                                       pos_cnum = 11910
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 195;
                                       pos_bol = 11897;
                                       pos_cnum = 11950
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("i <= i + n <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 195;
                                    pos_bol = 11897;
                                    pos_cnum = 11910
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 195;
                                    pos_bol = 11897;
                                    pos_cnum = 11950
                                  }
                              })]))
           with
           | None -> (match r with | Ok r -> None | _ -> None)
           | _ ->
               (match r with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__118_ = Model.get state__076_ 0 in
                         try
                           let __t1__119_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_6) in
                           let __t2__120_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__118_.contents) in
                           __t1__119_ && __t2__120_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 194;
                                          pos_bol = 11847;
                                          pos_cnum = 11860
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 194;
                                          pos_bol = 11847;
                                          pos_cnum = 11896
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Varray_circular_spec"
                              "make 42 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("0 <= i <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 194;
                                       pos_bol = 11847;
                                       pos_cnum = 11860
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 194;
                                       pos_bol = 11847;
                                       pos_cnum = 11896
                                     }
                                 })]))
                      (if
                         let tmp__118_ = Model.get state__076_ 0 in
                         try
                           let __t1__121_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_6)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_6)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n_1)) in
                           let __t2__122_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_6)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n_1))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__118_.contents) in
                           __t1__121_ && __t2__122_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 195;
                                          pos_bol = 11897;
                                          pos_cnum = 11910
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 195;
                                          pos_bol = 11897;
                                          pos_cnum = 11950
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Varray_circular_spec"
                              "make 42 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("i <= i + n <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 195;
                                       pos_bol = 11897;
                                       pos_cnum = 11910
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 195;
                                       pos_bol = 11897;
                                       pos_cnum = 11950
                                     }
                                 })]))))
      | (Copy, Res ((SUT, _), r_1)) -> None
      | (Fill (pos, len, x_4), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__124_ = Model.get state__076_ 0 in
                   try
                     let __t1__125_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
                     let __t2__126_ =
                       let __t1__127_ =
                         Ortac_runtime.Gospelstdlib.(<=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                       let __t2__128_ =
                         Ortac_runtime.Gospelstdlib.(<)
                           (Ortac_runtime.Gospelstdlib.(+)
                              (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                              (Ortac_runtime.Gospelstdlib.integer_of_int len))
                           (Ortac_runtime.Gospelstdlib.Sequence.length
                              tmp__124_.contents) in
                       __t1__127_ && __t2__128_ in
                     __t1__125_ && __t2__126_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12970;
                                    pos_cnum = 12983
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12970;
                                    pos_cnum = 13045
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "fill"
                        [("0 <= pos /\\ 0 <= len /\\ pos + len < Sequence.length t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 211;
                                 pos_bol = 12970;
                                 pos_cnum = 12983
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 211;
                                 pos_bol = 12970;
                                 pos_cnum = 13045
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__124_ = Model.get state__076_ 0 in
                      (try
                         let __t1__125_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
                         let __t2__126_ =
                           let __t1__127_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                           let __t2__128_ =
                             Ortac_runtime.Gospelstdlib.(<)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     pos)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     len))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__124_.contents) in
                           __t1__127_ && __t2__128_ in
                         __t1__125_ && __t2__126_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 211;
                                        pos_bol = 12970;
                                        pos_cnum = 12983
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 211;
                                        pos_bol = 12970;
                                        pos_cnum = 13045
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "fill"
                           [("0 <= pos /\\ 0 <= len /\\ pos + len < Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12970;
                                    pos_cnum = 12983
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12970;
                                    pos_cnum = 13045
                                  }
                              })])))
      | (Blit (src_pos, dst_pos, len_1), Res ((Result (Unit, Exn), _), res))
          ->
          (match Ortac_runtime.append
                   (if
                      let tmp__129_ = Model.get state__076_ 0
                      and tmp__130_ = Model.get state__076_ 1 in
                      try
                        let __t1__131_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int
                               src_pos) in
                        let __t2__132_ =
                          let __t1__133_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.integer_of_int
                                 src_pos)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    src_pos)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_1)) in
                          let __t2__134_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    src_pos)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_1))
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 tmp__129_.contents) in
                          __t1__133_ && __t2__134_ in
                        __t1__131_ && __t2__132_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 223;
                                       pos_bol = 13939;
                                       pos_cnum = 13952
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 223;
                                       pos_bol = 13939;
                                       pos_cnum = 14013
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "blit"
                           [("0 <= src_pos <= src_pos + len <= Sequence.length src.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 223;
                                    pos_bol = 13939;
                                    pos_cnum = 13952
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 223;
                                    pos_bol = 13939;
                                    pos_cnum = 14013
                                  }
                              })]))
                   (if
                      let tmp__129_ = Model.get state__076_ 0
                      and tmp__130_ = Model.get state__076_ 1 in
                      try
                        let __t1__135_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int
                               dst_pos) in
                        let __t2__136_ =
                          let __t1__137_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.integer_of_int
                                 dst_pos)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    dst_pos)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_1)) in
                          let __t2__138_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    dst_pos)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_1))
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 tmp__130_.contents) in
                          __t1__137_ && __t2__138_ in
                        __t1__135_ && __t2__136_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 224;
                                       pos_bol = 14014;
                                       pos_cnum = 14027
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 224;
                                       pos_bol = 14014;
                                       pos_cnum = 14088
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "blit"
                           [("0 <= dst_pos <= dst_pos + len <= Sequence.length dst.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 224;
                                    pos_bol = 14014;
                                    pos_cnum = 14027
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 224;
                                    pos_bol = 14014;
                                    pos_cnum = 14088
                                  }
                              })]))
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__129_ = Model.get state__076_ 0
                         and tmp__130_ = Model.get state__076_ 1 in
                         try
                           let __t1__131_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int
                                  src_pos) in
                           let __t2__132_ =
                             let __t1__133_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    src_pos)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       src_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_1)) in
                             let __t2__134_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       src_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_1))
                                 (Ortac_runtime.Gospelstdlib.Sequence.length
                                    tmp__129_.contents) in
                             __t1__133_ && __t2__134_ in
                           __t1__131_ && __t2__132_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 223;
                                          pos_bol = 13939;
                                          pos_cnum = 13952
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 223;
                                          pos_bol = 13939;
                                          pos_cnum = 14013
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Varray_circular_spec"
                              "make 42 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "blit"
                              [("0 <= src_pos <= src_pos + len <= Sequence.length src.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 223;
                                       pos_bol = 13939;
                                       pos_cnum = 13952
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 223;
                                       pos_bol = 13939;
                                       pos_cnum = 14013
                                     }
                                 })]))
                      (if
                         let tmp__129_ = Model.get state__076_ 0
                         and tmp__130_ = Model.get state__076_ 1 in
                         try
                           let __t1__135_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int
                                  dst_pos) in
                           let __t2__136_ =
                             let __t1__137_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    dst_pos)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       dst_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_1)) in
                             let __t2__138_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       dst_pos)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_1))
                                 (Ortac_runtime.Gospelstdlib.Sequence.length
                                    tmp__130_.contents) in
                             __t1__137_ && __t2__138_ in
                           __t1__135_ && __t2__136_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 224;
                                          pos_bol = 14014;
                                          pos_cnum = 14027
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname =
                                            "varray_circular_spec.mli";
                                          pos_lnum = 224;
                                          pos_bol = 14014;
                                          pos_cnum = 14088
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Varray_circular_spec"
                              "make 42 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "blit"
                              [("0 <= dst_pos <= dst_pos + len <= Sequence.length dst.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 224;
                                       pos_bol = 14014;
                                       pos_cnum = 14027
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "varray_circular_spec.mli";
                                       pos_lnum = 224;
                                       pos_bol = 14014;
                                       pos_cnum = 14088
                                     }
                                 })]))))
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Varray_circular_spec STM tests" 2
        check_init_state ortac_show_cmd ortac_postcond])
