(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Array
module Ortac_runtime = Ortac_runtime_qcheck_stm
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = char t
                             let init () = make 16 'a'
                           end)
module ModelElt =
  struct
    type nonrec elt =
      {
      size: Ortac_runtime.integer ;
      contents: char Ortac_runtime.Gospelstdlib.sequence }
    let init =
      let i_2 = 16
      and a_2 = 'a' in
      {
        size =
          (try Ortac_runtime.Gospelstdlib.integer_of_int i_2
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 23;
                            pos_bol = 862;
                            pos_cnum = 883
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 23;
                            pos_bol = 862;
                            pos_cnum = 884
                          }
                      })));
        contents =
          (try
             Ortac_runtime.Gospelstdlib.Sequence.init
               (Ortac_runtime.Gospelstdlib.integer_of_int i_2) (fun j -> a_2)
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 24;
                            pos_bol = 885;
                            pos_cnum = 910
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 24;
                            pos_bol = 885;
                            pos_cnum = 938
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    module QCheck =
      struct
        include QCheck
        module Gen = struct include Gen
                            let int = small_signed_int end
      end
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 2
    type state = Model.t
    let init_state = Model.create 2 ()
    type cmd =
      | Length 
      | Get of int 
      | Set of int * char 
      | Make of int * char 
      | Append 
      | Sub of int * int 
      | Copy 
      | Fill of int * int * char 
      | To_list 
      | Mem of char 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Length -> Format.asprintf "%s <sut>" "length"
      | Get i ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "get"
            (Util.Pp.pp_int true) i
      | Set (i_1, a_1) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "set"
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_char true) a_1
      | Make (i_2, a_2) ->
          Format.asprintf "protect (fun () -> %s %a %a)" "make"
            (Util.Pp.pp_int true) i_2 (Util.Pp.pp_char true) a_2
      | Append -> Format.asprintf "%s <sut> <sut>" "append"
      | Sub (i_3, n) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "sub"
            (Util.Pp.pp_int true) i_3 (Util.Pp.pp_int true) n
      | Copy -> Format.asprintf "%s <sut>" "copy"
      | Fill (pos, len, x) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a %a)" "fill"
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_char true) x
      | To_list -> Format.asprintf "%s <sut>" "to_list"
      | Mem a_3 ->
          Format.asprintf "%s %a <sut>" "mem" (Util.Pp.pp_char true) a_3
    let shrink_cmd cmd__002_ =
      let open QCheck in
        let open Shrink in
          let open Iter in
            match cmd__002_ with
            | Length -> empty
            | Get i -> map (fun i -> Get i) (int i)
            | Set (i_1, a_1) ->
                (map (fun i_1 -> Set (i_1, a_1)) (int i_1)) <+>
                  (map (fun a_1 -> Set (i_1, a_1)) (char a_1))
            | Make (i_2, a_2) ->
                (map (fun i_2 -> Make (i_2, a_2)) (int i_2)) <+>
                  (map (fun a_2 -> Make (i_2, a_2)) (char a_2))
            | Append -> empty
            | Sub (i_3, n) ->
                (map (fun i_3 -> Sub (i_3, n)) (int i_3)) <+>
                  (map (fun n -> Sub (i_3, n)) (int n))
            | Copy -> empty
            | Fill (pos, len, x) ->
                ((map (fun pos -> Fill (pos, len, x)) (int pos)) <+>
                   (map (fun len -> Fill (pos, len, x)) (int len)))
                  <+> (map (fun x -> Fill (pos, len, x)) (char x))
            | To_list -> empty
            | Mem a_3 -> map (fun a_3 -> Mem a_3) (char a_3)
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd ~shrink:shrink_cmd
          (let open Gen in
             oneof
               [pure Length;
               (pure (fun i -> Get i)) <*> int;
               ((pure (fun i_1 -> fun a_1 -> Set (i_1, a_1))) <*> int) <*>
                 char;
               ((pure (fun i_2 -> fun a_2 -> Make (i_2, a_2))) <*>
                  small_signed_int)
                 <*> char;
               pure Append;
               ((pure (fun i_3 -> fun n -> Sub (i_3, n))) <*> int) <*> int;
               pure Copy;
               (((pure (fun pos -> fun len -> fun x -> Fill (pos, len, x)))
                   <*> int)
                  <*> int)
                 <*> char;
               pure To_list;
               (pure (fun a_3 -> Mem a_3)) <*> char])
    let next_state cmd__003_ state__004_ =
      match cmd__003_ with
      | Length ->
          let t_1__005_ = Model.get state__004_ 0 in
          let t_1__006_ = t_1__005_ in
          Model.push (Model.drop_n state__004_ 1) t_1__006_
      | Get i ->
          let t_2__007_ = Model.get state__004_ 0 in
          if
            (try
               let __t1__009_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i) in
               let __t2__010_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i)
                   t_2__007_.size in
               __t1__009_ && __t2__010_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 11;
                              pos_bol = 390;
                              pos_cnum = 401
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 11;
                              pos_bol = 390;
                              pos_cnum = 416
                            }
                        })))
          then
            let t_2__008_ = t_2__007_ in
            Model.push (Model.drop_n state__004_ 1) t_2__008_
          else state__004_
      | Set (i_1, a_1) ->
          let t_3__011_ = Model.get state__004_ 0 in
          if
            (try
               let __t1__013_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
               let __t2__014_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                   t_3__011_.size in
               __t1__013_ && __t2__014_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 16;
                              pos_bol = 578;
                              pos_cnum = 589
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 16;
                              pos_bol = 578;
                              pos_cnum = 604
                            }
                        })))
          then
            let t_3__012_ =
              let open ModelElt in
                {
                  t_3__011_ with
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.set
                         t_3__011_.contents
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) a_1
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 18;
                                      pos_bol = 629;
                                      pos_cnum = 654
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 18;
                                      pos_bol = 629;
                                      pos_cnum = 687
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__004_ 1) t_3__012_
          else state__004_
      | Make (i_2, a_2) ->
          if
            (try
               Ortac_runtime.Gospelstdlib.(>=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 22;
                              pos_bol = 844;
                              pos_cnum = 855
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 22;
                              pos_bol = 844;
                              pos_cnum = 861
                            }
                        })))
          then
            let t_4__016_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int i_2
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 23;
                                      pos_bol = 862;
                                      pos_cnum = 883
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 23;
                                      pos_bol = 862;
                                      pos_cnum = 884
                                    }
                                })));
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                         (fun j -> a_2)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 24;
                                      pos_bol = 885;
                                      pos_cnum = 910
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 24;
                                      pos_bol = 885;
                                      pos_cnum = 938
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__004_ 0) t_4__016_
          else state__004_
      | Append ->
          let a_4__017_ = Model.get state__004_ 0
          and b__018_ = Model.get state__004_ 1 in
          let t_5__022_ =
            let open ModelElt in
              {
                size =
                  (try
                     Ortac_runtime.Gospelstdlib.(+) a_4__017_.size
                       b__018_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1097;
                                    pos_cnum = 1125
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1097;
                                    pos_cnum = 1126
                                  }
                              })));
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++) a_4__017_.contents
                       b__018_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 29;
                                    pos_bol = 1134;
                                    pos_cnum = 1170
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 29;
                                    pos_bol = 1134;
                                    pos_cnum = 1172
                                  }
                              })))
              }
          and a_4__021_ = a_4__017_
          and b__020_ = b__018_ in
          Model.push
            (Model.push (Model.push (Model.drop_n state__004_ 2) b__020_)
               a_4__021_) t_5__022_
      | Sub (i_3, n) ->
          let t_6__023_ = Model.get state__004_ 0 in
          if
            (try
               let __t1__027_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
               let __t2__028_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      t_6__023_.contents) in
               __t1__027_ && __t2__028_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 33;
                              pos_bol = 1340;
                              pos_cnum = 1351
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 33;
                              pos_bol = 1340;
                              pos_cnum = 1387
                            }
                        })))
              &&
              ((try
                  let __t1__029_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n)) in
                  let __t2__030_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n))
                      (Ortac_runtime.Gospelstdlib.Sequence.length
                         t_6__023_.contents) in
                  __t1__029_ && __t2__030_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 34;
                                 pos_bol = 1388;
                                 pos_cnum = 1399
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 34;
                                 pos_bol = 1388;
                                 pos_cnum = 1439
                               }
                           }))))
          then
            let r__026_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int n
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 35;
                                      pos_bol = 1440;
                                      pos_cnum = 1461
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 35;
                                      pos_bol = 1440;
                                      pos_cnum = 1462
                                    }
                                })));
                  contents =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int n) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then Ortac_runtime.Gospelstdlib.Sequence.empty
                       else
                         Ortac_runtime.Gospelstdlib.__mix_Buddub
                           t_6__023_.contents
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    i_3)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int n))
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 36;
                                      pos_bol = 1463;
                                      pos_cnum = 1488
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 36;
                                      pos_bol = 1463;
                                      pos_cnum = 1542
                                    }
                                })))
                }
            and t_6__025_ = t_6__023_ in
            Model.push (Model.push (Model.drop_n state__004_ 1) t_6__025_)
              r__026_
          else state__004_
      | Copy ->
          let t_7__031_ = Model.get state__004_ 0 in
          let r_1__034_ =
            let open ModelElt in
              {
                size =
                  (try t_7__031_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 40;
                                    pos_bol = 1713;
                                    pos_cnum = 1734
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 40;
                                    pos_bol = 1713;
                                    pos_cnum = 1740
                                  }
                              })));
                contents =
                  (try t_7__031_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 41;
                                    pos_bol = 1741;
                                    pos_cnum = 1766
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 41;
                                    pos_bol = 1741;
                                    pos_cnum = 1776
                                  }
                              })))
              }
          and t_7__033_ = t_7__031_ in
          Model.push (Model.push (Model.drop_n state__004_ 1) t_7__033_)
            r_1__034_
      | Fill (pos, len, x) ->
          let t_8__035_ = Model.get state__004_ 0 in
          if
            (try
               Ortac_runtime.Gospelstdlib.(<=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                 (Ortac_runtime.Gospelstdlib.integer_of_int pos)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 45;
                              pos_bol = 1929;
                              pos_cnum = 1940
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 45;
                              pos_bol = 1929;
                              pos_cnum = 1948
                            }
                        })))
              &&
              ((try
                  Ortac_runtime.Gospelstdlib.(<=)
                    (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                    (Ortac_runtime.Gospelstdlib.integer_of_int len)
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 46;
                                 pos_bol = 1949;
                                 pos_cnum = 1960
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 46;
                                 pos_bol = 1949;
                                 pos_cnum = 1968
                               }
                           })))
                 &&
                 ((try
                     Ortac_runtime.Gospelstdlib.(<=)
                       (Ortac_runtime.Gospelstdlib.(+)
                          (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                          (Ortac_runtime.Gospelstdlib.integer_of_int len))
                       t_8__035_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 47;
                                    pos_bol = 1969;
                                    pos_cnum = 1980
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 47;
                                    pos_bol = 1969;
                                    pos_cnum = 1999
                                  }
                              })))))
          then
            let t_8__038_ =
              let open ModelElt in
                {
                  t_8__035_ with
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            t_8__035_.contents)
                         (fun i_4 ->
                            if
                              let __t1__036_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     pos) i_4 in
                              let __t2__037_ =
                                Ortac_runtime.Gospelstdlib.(<) i_4
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        pos)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        len)) in
                              __t1__036_ && __t2__037_
                            then x
                            else
                              Ortac_runtime.Gospelstdlib.__mix_Bub
                                t_8__035_.contents i_4)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 49;
                                      pos_bol = 2024;
                                      pos_cnum = 2049
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 49;
                                      pos_bol = 2024;
                                      pos_cnum = 2164
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__004_ 1) t_8__038_
          else state__004_
      | To_list ->
          let t_9__039_ = Model.get state__004_ 0 in
          let t_9__040_ = t_9__039_ in
          Model.push (Model.drop_n state__004_ 1) t_9__040_
      | Mem a_3 ->
          let t_10__041_ = Model.get state__004_ 0 in
          let t_10__042_ = t_10__041_ in
          Model.push (Model.drop_n state__004_ 1) t_10__042_
    let precond cmd__079_ state__080_ =
      match cmd__079_ with
      | Length -> true
      | Get i -> true
      | Set (i_1, a_1) -> true
      | Make (i_2, a_2) -> true
      | Append -> true
      | Sub (i_3, n) -> true
      | Copy -> true
      | Fill (pos, len, x) -> true
      | To_list -> true
      | Mem a_3 -> true
    let postcond _ _ _ = true
    let run cmd__081_ sut__082_ =
      match cmd__081_ with
      | Length ->
          Res
            (int,
              (let t_1__083_ = SUT.pop sut__082_ in
               let res__084_ = length t_1__083_ in
               (SUT.push sut__082_ t_1__083_; res__084_)))
      | Get i ->
          Res
            ((result char exn),
              (let t_2__085_ = SUT.pop sut__082_ in
               let res__086_ = protect (fun () -> get t_2__085_ i) () in
               (SUT.push sut__082_ t_2__085_; res__086_)))
      | Set (i_1, a_1) ->
          Res
            ((result unit exn),
              (let t_3__087_ = SUT.pop sut__082_ in
               let res__088_ = protect (fun () -> set t_3__087_ i_1 a_1) () in
               (SUT.push sut__082_ t_3__087_; res__088_)))
      | Make (i_2, a_2) ->
          Res
            ((result sut exn),
              (let res__089_ = protect (fun () -> make i_2 a_2) () in
               ((match res__089_ with
                 | Ok res -> SUT.push sut__082_ res
                 | Error _ -> ());
                res__089_)))
      | Append ->
          Res
            (sut,
              (let a_4__090_ = SUT.pop sut__082_ in
               let b__091_ = SUT.pop sut__082_ in
               let res__092_ = append a_4__090_ b__091_ in
               (SUT.push sut__082_ b__091_;
                SUT.push sut__082_ a_4__090_;
                SUT.push sut__082_ res__092_;
                res__092_)))
      | Sub (i_3, n) ->
          Res
            ((result sut exn),
              (let t_6__093_ = SUT.pop sut__082_ in
               let res__094_ = protect (fun () -> sub t_6__093_ i_3 n) () in
               (SUT.push sut__082_ t_6__093_;
                (match res__094_ with
                 | Ok res -> SUT.push sut__082_ res
                 | Error _ -> ());
                res__094_)))
      | Copy ->
          Res
            (sut,
              (let t_7__095_ = SUT.pop sut__082_ in
               let res__096_ = copy t_7__095_ in
               (SUT.push sut__082_ t_7__095_;
                SUT.push sut__082_ res__096_;
                res__096_)))
      | Fill (pos, len, x) ->
          Res
            ((result unit exn),
              (let t_8__097_ = SUT.pop sut__082_ in
               let res__098_ =
                 protect (fun () -> fill t_8__097_ pos len x) () in
               (SUT.push sut__082_ t_8__097_; res__098_)))
      | To_list ->
          Res
            ((list char),
              (let t_9__099_ = SUT.pop sut__082_ in
               let res__100_ = to_list t_9__099_ in
               (SUT.push sut__082_ t_9__099_; res__100_)))
      | Mem a_3 ->
          Res
            (bool,
              (let t_10__101_ = SUT.pop sut__082_ in
               let res__102_ = mem a_3 t_10__101_ in
               (SUT.push sut__082_ t_10__101_; res__102_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_show_cmd cmd__104_ state__105_ last__107_ res__106_ =
  let open Spec in
    let open STM in
      match (cmd__104_, res__106_) with
      | (Length, Res ((Int, _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "length"
            (SUT.get_name state__105_ (0 + shift))
      | (Get i, Res ((Result (Char, Exn), _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs "get"
            (SUT.get_name state__105_ (0 + shift)) (Util.Pp.pp_int true) i
      | (Set (i_1, a_1), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "set" (SUT.get_name state__105_ (0 + shift))
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_char true) a_1
      | (Make (i_2, a_2), Res ((Result (SUT, Exn), _), t_4)) ->
          let lhs =
            if last__107_
            then "r"
            else
              (match t_4 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__105_ 0)
               | Error _ -> "_")
          and shift = match t_4 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %a %a)" lhs "make"
            (Util.Pp.pp_int true) i_2 (Util.Pp.pp_char true) a_2
      | (Append, Res ((SUT, _), t_5)) ->
          let lhs = if last__107_ then "r" else SUT.get_name state__105_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %s" lhs "append"
            (SUT.get_name state__105_ (0 + shift))
            (SUT.get_name state__105_ (1 + shift))
      | (Sub (i_3, n), Res ((Result (SUT, Exn), _), r)) ->
          let lhs =
            if last__107_
            then "r"
            else
              (match r with
               | Ok _ -> "Ok " ^ (SUT.get_name state__105_ 0)
               | Error _ -> "_")
          and shift = match r with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "sub" (SUT.get_name state__105_ (0 + shift))
            (Util.Pp.pp_int true) i_3 (Util.Pp.pp_int true) n
      | (Copy, Res ((SUT, _), r_1)) ->
          let lhs = if last__107_ then "r" else SUT.get_name state__105_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "copy"
            (SUT.get_name state__105_ (0 + shift))
      | (Fill (pos, len, x), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a %a)" lhs
            "fill" (SUT.get_name state__105_ (0 + shift))
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_char true) x
      | (To_list, Res ((List (Char), _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "to_list"
            (SUT.get_name state__105_ (0 + shift))
      | (Mem a_3, Res ((Bool, _), _)) ->
          let lhs = if last__107_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %a %s" lhs "mem"
            (Util.Pp.pp_char true) a_3 (SUT.get_name state__105_ (0 + shift))
      | _ -> assert false
let ortac_postcond cmd__043_ state__044_ res__045_ =
  let open Spec in
    let open STM in
      let new_state__046_ = lazy (next_state cmd__043_ state__044_) in
      match (cmd__043_, res__045_) with
      | (Length, Res ((Int, _), i_5)) ->
          if
            let t_old__049_ = Model.get state__044_ 0
            and t_new__050_ = lazy (Model.get (Lazy.force new_state__046_) 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int i_5) =
                 (Lazy.force t_new__050_).size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 7;
                              pos_bol = 250;
                              pos_cnum = 262
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 7;
                              pos_bol = 250;
                              pos_cnum = 272
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value
                    (Res
                       (integer,
                         (let t_old__047_ = Model.get state__044_ 0
                          and t_new__048_ =
                            lazy (Model.get (Lazy.force new_state__046_) 0) in
                          try (Lazy.force t_new__048_).size
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 7;
                                           pos_bol = 250;
                                           pos_cnum = 266
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 7;
                                           pos_bol = 250;
                                           pos_cnum = 272
                                         }
                                     })))))) "length"
                 [("i = t.size",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 7;
                          pos_bol = 250;
                          pos_cnum = 262
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 7;
                          pos_bol = 250;
                          pos_cnum = 272
                        }
                    })])
      | (Get i, Res ((Result (Char, Exn), _), a_5)) ->
          (match if
                   let tmp__056_ = Model.get state__044_ 0 in
                   try
                     let __t1__057_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                     let __t2__058_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i)
                         tmp__056_.size in
                     __t1__057_ && __t2__058_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 401
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 416
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "get"
                        [("0 <= i < t.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 11;
                                 pos_bol = 390;
                                 pos_cnum = 401
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 11;
                                 pos_bol = 390;
                                 pos_cnum = 416
                               }
                           })])
           with
           | None ->
               (match a_5 with
                | Ok a_5 ->
                    if
                      let t_old__054_ = Model.get state__044_ 0
                      and t_new__055_ =
                        lazy (Model.get (Lazy.force new_state__046_) 0) in
                      (try
                         a_5 =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force t_new__055_).contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 12;
                                        pos_bol = 417;
                                        pos_cnum = 429
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 12;
                                        pos_bol = 417;
                                        pos_cnum = 446
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Protected_value
                              (Res
                                 (char,
                                   (let t_old__052_ = Model.get state__044_ 0
                                    and t_new__053_ =
                                      lazy
                                        (Model.get
                                           (Lazy.force new_state__046_) 0) in
                                    try
                                      Ortac_runtime.Gospelstdlib.__mix_Bub
                                        (Lazy.force t_new__053_).contents
                                        (Ortac_runtime.Gospelstdlib.integer_of_int
                                           i)
                                    with
                                    | e ->
                                        raise
                                          (Ortac_runtime.Partial_function
                                             (e,
                                               {
                                                 Ortac_runtime.start =
                                                   {
                                                     pos_fname = "array.mli";
                                                     pos_lnum = 12;
                                                     pos_bol = 417;
                                                     pos_cnum = 443
                                                   };
                                                 Ortac_runtime.stop =
                                                   {
                                                     pos_fname = "array.mli";
                                                     pos_lnum = 12;
                                                     pos_bol = 417;
                                                     pos_cnum = 444
                                                   }
                                               })))))) "get"
                           [("a = t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 12;
                                    pos_bol = 417;
                                    pos_cnum = 429
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 12;
                                    pos_bol = 417;
                                    pos_cnum = 446
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match a_5 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__056_ = Model.get state__044_ 0 in
                      (try
                         let __t1__057_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                         let __t2__058_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i)
                             tmp__056_.size in
                         __t1__057_ && __t2__058_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 11;
                                        pos_bol = 390;
                                        pos_cnum = 401
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 11;
                                        pos_bol = 390;
                                        pos_cnum = 416
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "get"
                           [("0 <= i < t.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 401
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 416
                                  }
                              })])))
      | (Set (i_1, a_1), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__059_ = Model.get state__044_ 0 in
                   try
                     let __t1__060_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                     let __t2__061_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                         tmp__059_.size in
                     __t1__060_ && __t2__061_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 589
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 604
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "set"
                        [("0 <= i < t.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 16;
                                 pos_bol = 578;
                                 pos_cnum = 589
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 16;
                                 pos_bol = 578;
                                 pos_cnum = 604
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__059_ = Model.get state__044_ 0 in
                      (try
                         let __t1__060_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                         let __t2__061_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                             tmp__059_.size in
                         __t1__060_ && __t2__061_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 16;
                                        pos_bol = 578;
                                        pos_cnum = 589
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 16;
                                        pos_bol = 578;
                                        pos_cnum = 604
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "set"
                           [("0 <= i < t.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 589
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 604
                                  }
                              })])))
      | (Make (i_2, a_2), Res ((Result (SUT, Exn), _), t_4)) ->
          (match if
                   try
                     Ortac_runtime.Gospelstdlib.(>=)
                       (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                       (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 855
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 861
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "make"
                        [("i >= 0",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 22;
                                 pos_bol = 844;
                                 pos_cnum = 855
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 22;
                                 pos_bol = 844;
                                 pos_cnum = 861
                               }
                           })])
           with
           | None -> (match t_4 with | Ok t_4 -> None | _ -> None)
           | _ ->
               (match t_4 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      (try
                         Ortac_runtime.Gospelstdlib.(>=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 22;
                                        pos_bol = 844;
                                        pos_cnum = 855
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 22;
                                        pos_bol = 844;
                                        pos_cnum = 861
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "make"
                           [("i >= 0",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 855
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 861
                                  }
                              })])))
      | (Append, Res ((SUT, _), t_5)) -> None
      | (Sub (i_3, n), Res ((Result (SUT, Exn), _), r)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__064_ = Model.get state__044_ 0 in
                      try
                        let __t1__065_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
                        let __t2__066_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__064_.contents) in
                        __t1__065_ && __t2__066_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1351
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1387
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 33;
                                    pos_bol = 1340;
                                    pos_cnum = 1351
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 33;
                                    pos_bol = 1340;
                                    pos_cnum = 1387
                                  }
                              })]))
                   (if
                      let tmp__064_ = Model.get state__044_ 0 in
                      try
                        let __t1__067_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n)) in
                        let __t2__068_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n))
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__064_.contents) in
                        __t1__067_ && __t2__068_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1399
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1439
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("i <= i + n <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 34;
                                    pos_bol = 1388;
                                    pos_cnum = 1399
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 34;
                                    pos_bol = 1388;
                                    pos_cnum = 1439
                                  }
                              })]))
           with
           | None -> (match r with | Ok r -> None | _ -> None)
           | _ ->
               (match r with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__064_ = Model.get state__044_ 0 in
                         try
                           let __t1__065_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
                           let __t2__066_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__064_.contents) in
                           __t1__065_ && __t2__066_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 33;
                                          pos_bol = 1340;
                                          pos_cnum = 1351
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 33;
                                          pos_bol = 1340;
                                          pos_cnum = 1387
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("0 <= i <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1351
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1387
                                     }
                                 })]))
                      (if
                         let tmp__064_ = Model.get state__044_ 0 in
                         try
                           let __t1__067_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_3)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n)) in
                           let __t2__068_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_3)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__064_.contents) in
                           __t1__067_ && __t2__068_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 34;
                                          pos_bol = 1388;
                                          pos_cnum = 1399
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 34;
                                          pos_bol = 1388;
                                          pos_cnum = 1439
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("i <= i + n <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1399
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1439
                                     }
                                 })]))))
      | (Copy, Res ((SUT, _), r_1)) -> None
      | (Fill (pos, len, x), Res ((Result (Unit, Exn), _), res)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__070_ = Model.get state__044_ 0 in
                      try
                        Ortac_runtime.Gospelstdlib.(<=)
                          (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                          (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1940
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1948
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "fill"
                           [("0 <= pos",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 45;
                                    pos_bol = 1929;
                                    pos_cnum = 1940
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 45;
                                    pos_bol = 1929;
                                    pos_cnum = 1948
                                  }
                              })]))
                   (Ortac_runtime.append
                      (if
                         let tmp__070_ = Model.get state__044_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int len)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1960
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1968
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("0 <= len",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 46;
                                       pos_bol = 1949;
                                       pos_cnum = 1960
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 46;
                                       pos_bol = 1949;
                                       pos_cnum = 1968
                                     }
                                 })]))
                      (if
                         let tmp__070_ = Model.get state__044_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.(+)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   pos)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len)) tmp__070_.size
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1980
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1999
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("pos + len <= t.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 47;
                                       pos_bol = 1969;
                                       pos_cnum = 1980
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 47;
                                       pos_bol = 1969;
                                       pos_cnum = 1999
                                     }
                                 })])))
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__070_ = Model.get state__044_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 45;
                                          pos_bol = 1929;
                                          pos_cnum = 1940
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 45;
                                          pos_bol = 1929;
                                          pos_cnum = 1948
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("0 <= pos",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1940
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1948
                                     }
                                 })]))
                      (Ortac_runtime.append
                         (if
                            let tmp__070_ = Model.get state__044_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len)
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 46;
                                             pos_bol = 1949;
                                             pos_cnum = 1960
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 46;
                                             pos_bol = 1949;
                                             pos_cnum = 1968
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Array" "make 16 'a'"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "fill"
                                 [("0 <= len",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1960
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1968
                                        }
                                    })]))
                         (if
                            let tmp__070_ = Model.get state__044_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.(+)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      pos)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      len)) tmp__070_.size
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 47;
                                             pos_bol = 1969;
                                             pos_cnum = 1980
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 47;
                                             pos_bol = 1969;
                                             pos_cnum = 1999
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Array" "make 16 'a'"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "fill"
                                 [("pos + len <= t.size",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1980
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1999
                                        }
                                    })])))))
      | (To_list, Res ((List (Char), _), l)) ->
          if
            let t_old__073_ = Model.get state__044_ 0
            and t_new__074_ = lazy (Model.get (Lazy.force new_state__046_) 0) in
            (try
               l =
                 (Ortac_runtime.Gospelstdlib.List.of_seq
                    (Lazy.force t_new__074_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 53;
                              pos_bol = 2405;
                              pos_cnum = 2417
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 53;
                              pos_bol = 2405;
                              pos_cnum = 2443
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value
                    (Res
                       ((list char),
                         (let t_old__071_ = Model.get state__044_ 0
                          and t_new__072_ =
                            lazy (Model.get (Lazy.force new_state__046_) 0) in
                          try
                            Ortac_runtime.Gospelstdlib.List.of_seq
                              (Lazy.force t_new__072_).contents
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 53;
                                           pos_bol = 2405;
                                           pos_cnum = 2421
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 53;
                                           pos_bol = 2405;
                                           pos_cnum = 2443
                                         }
                                     })))))) "to_list"
                 [("l = List.of_seq t.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 53;
                          pos_bol = 2405;
                          pos_cnum = 2417
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 53;
                          pos_bol = 2405;
                          pos_cnum = 2443
                        }
                    })])
      | (Mem a_3, Res ((Bool, _), b_1)) ->
          if
            let t_old__076_ = Model.get state__044_ 0
            and t_new__077_ = lazy (Model.get (Lazy.force new_state__046_) 0) in
            (try
               (b_1 = true) =
                 (Ortac_runtime.Gospelstdlib.Sequence.mem
                    (Lazy.force t_new__077_).contents a_3)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 57;
                              pos_bol = 2579;
                              pos_cnum = 2591
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 57;
                              pos_bol = 2579;
                              pos_cnum = 2620
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ()))) "mem"
                 [("b = Sequence.mem t.contents a",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 57;
                          pos_bol = 2579;
                          pos_cnum = 2591
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 57;
                          pos_bol = 2579;
                          pos_cnum = 2620
                        }
                    })])
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Array STM tests" 2 check_init_state
        ortac_show_cmd ortac_postcond])
