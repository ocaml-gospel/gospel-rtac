(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Record
module Ortac_runtime = Ortac_runtime_qcheck_stm
let plus1_1 i =
  try
    Ortac_runtime.Gospelstdlib.(+) i
      (Ortac_runtime.Gospelstdlib.integer_of_int 1)
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "record.mli";
                   pos_lnum = 13;
                   pos_bol = 525;
                   pos_cnum = 571
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "record.mli";
                   pos_lnum = 13;
                   pos_bol = 525;
                   pos_cnum = 572
                 }
             }))
module SUT =
  (Ortac_runtime.SUT.Make)(struct type sut = t
                                  let init () = make 42 end)
module ModelElt =
  struct
    type nonrec elt = {
      value: Ortac_runtime.integer }
    let init =
      let i_1 = 42 in
      {
        value =
          (try Ortac_runtime.Gospelstdlib.integer_of_int i_1
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "record.mli";
                            pos_lnum = 7;
                            pos_bol = 285;
                            pos_cnum = 307
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "record.mli";
                            pos_lnum = 7;
                            pos_bol = 285;
                            pos_cnum = 308
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 1
    type state = Model.t
    let init_state = Model.create 1 ()
    type cmd =
      | Make of int 
      | Plus1 of int 
      | Plus2 of int 
      | Get 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Make i_1 -> Format.asprintf "%s %a" "make" (Util.Pp.pp_int true) i_1
      | Plus1 i_2 ->
          Format.asprintf "%s %a" "plus1" (Util.Pp.pp_int true) i_2
      | Plus2 i_3 ->
          Format.asprintf "%s %a" "plus2" (Util.Pp.pp_int true) i_3
      | Get -> Format.asprintf "%s <sut>" "get"
    let shrink_cmd cmd__002_ =
      let open QCheck in
        let open Shrink in
          let open Iter in
            match cmd__002_ with
            | Make i_1 -> map (fun i_1 -> Make i_1) (int i_1)
            | Plus1 i_2 -> map (fun i_2 -> Plus1 i_2) (int i_2)
            | Plus2 i_3 -> map (fun i_3 -> Plus2 i_3) (int i_3)
            | Get -> empty
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd ~shrink:shrink_cmd
          (let open Gen in
             oneof
               [(pure (fun i_1 -> Make i_1)) <*> small_signed_int;
               (pure (fun i_2 -> Plus1 i_2)) <*> int;
               (pure (fun i_3 -> Plus2 i_3)) <*> int;
               pure Get])
    let next_state cmd__003_ state__004_ =
      match cmd__003_ with
      | Make i_1 ->
          let r__006_ =
            let open ModelElt in
              {
                value =
                  (try Ortac_runtime.Gospelstdlib.integer_of_int i_1
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "record.mli";
                                    pos_lnum = 7;
                                    pos_bol = 285;
                                    pos_cnum = 307
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "record.mli";
                                    pos_lnum = 7;
                                    pos_bol = 285;
                                    pos_cnum = 308
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__004_ 0) r__006_
      | Plus1 i_2 -> state__004_
      | Plus2 i_3 -> state__004_
      | Get ->
          let r_1__007_ = Model.get state__004_ 0 in
          let r_1__008_ = r_1__007_ in
          Model.push (Model.drop_n state__004_ 1) r_1__008_
    let precond cmd__028_ state__029_ =
      match cmd__028_ with
      | Make i_1 -> true
      | Plus1 i_2 -> true
      | Plus2 i_3 -> true
      | Get -> true
    let postcond _ _ _ = true
    let run cmd__030_ sut__031_ =
      match cmd__030_ with
      | Make i_1 ->
          Res
            (sut,
              (let res__032_ = make i_1 in
               (SUT.push sut__031_ res__032_; res__032_)))
      | Plus1 i_2 -> Res (int, (let res__033_ = plus1 i_2 in res__033_))
      | Plus2 i_3 -> Res (int, (let res__034_ = plus2 i_3 in res__034_))
      | Get ->
          Res
            (int,
              (let r_1__035_ = SUT.pop sut__031_ in
               let res__036_ = get r_1__035_ in
               (SUT.push sut__031_ r_1__035_; res__036_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_show_cmd cmd__038_ state__039_ last__041_ res__040_ =
  let open Spec in
    let open STM in
      match (cmd__038_, res__040_) with
      | (Make i_1, Res ((SUT, _), r)) ->
          let lhs = if last__041_ then "r" else SUT.get_name state__039_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %a" lhs "make" (Util.Pp.pp_int true)
            i_1
      | (Plus1 i_2, Res ((Int, _), _)) ->
          let lhs = if last__041_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %a" lhs "plus1" (Util.Pp.pp_int true)
            i_2
      | (Plus2 i_3, Res ((Int, _), _)) ->
          let lhs = if last__041_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %a" lhs "plus2" (Util.Pp.pp_int true)
            i_3
      | (Get, Res ((Int, _), _)) ->
          let lhs = if last__041_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "get"
            (SUT.get_name state__039_ (0 + shift))
      | _ -> assert false
let ortac_postcond cmd__009_ state__010_ res__011_ =
  let open Spec in
    let open STM in
      let new_state__012_ = lazy (next_state cmd__009_ state__010_) in
      match (cmd__009_, res__011_) with
      | (Make i_1, Res ((SUT, _), r)) -> None
      | (Plus1 i_2, Res ((Int, _), i1)) ->
          if
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int i1) =
                 (Ortac_runtime.Gospelstdlib.(+)
                    (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                    (Ortac_runtime.Gospelstdlib.integer_of_int 1))
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "record.mli";
                              pos_lnum = 11;
                              pos_bol = 425;
                              pos_cnum = 437
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "record.mli";
                              pos_lnum = 11;
                              pos_bol = 425;
                              pos_cnum = 447
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Record" "make 42"
                 (Ortac_runtime.Value
                    (Res
                       (integer,
                         (try
                            Ortac_runtime.Gospelstdlib.(+)
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1)
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "record.mli";
                                           pos_lnum = 11;
                                           pos_bol = 425;
                                           pos_cnum = 444
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "record.mli";
                                           pos_lnum = 11;
                                           pos_bol = 425;
                                           pos_cnum = 445
                                         }
                                     })))))) "plus1"
                 [("i1 = i + 1",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "record.mli";
                          pos_lnum = 11;
                          pos_bol = 425;
                          pos_cnum = 437
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "record.mli";
                          pos_lnum = 11;
                          pos_bol = 425;
                          pos_cnum = 447
                        }
                    })])
      | (Plus2 i_3, Res ((Int, _), i2)) ->
          if
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int i2) =
                 (Ortac_runtime.Gospelstdlib.(+)
                    (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                    (Ortac_runtime.Gospelstdlib.integer_of_int 2))
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "record.mli";
                              pos_lnum = 18;
                              pos_bol = 727;
                              pos_cnum = 739
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "record.mli";
                              pos_lnum = 18;
                              pos_bol = 727;
                              pos_cnum = 749
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Record" "make 42"
                 (Ortac_runtime.Value
                    (Res
                       (integer,
                         (try
                            Ortac_runtime.Gospelstdlib.(+)
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 2)
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "record.mli";
                                           pos_lnum = 18;
                                           pos_bol = 727;
                                           pos_cnum = 746
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "record.mli";
                                           pos_lnum = 18;
                                           pos_bol = 727;
                                           pos_cnum = 747
                                         }
                                     })))))) "plus2"
                 [("i2 = i + 2",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "record.mli";
                          pos_lnum = 18;
                          pos_bol = 727;
                          pos_cnum = 739
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "record.mli";
                          pos_lnum = 18;
                          pos_bol = 727;
                          pos_cnum = 749
                        }
                    })])
      | (Get, Res ((Int, _), i_4)) ->
          Ortac_runtime.append
            (if
               let r_old__018_ = Model.get state__010_ 0
               and r_new__019_ =
                 lazy (Model.get (Lazy.force new_state__012_) 0) in
               try
                 (Ortac_runtime.Gospelstdlib.integer_of_int i_4) =
                   (Lazy.force r_new__019_).value
               with
               | e ->
                   raise
                     (Ortac_runtime.Partial_function
                        (e,
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 23;
                                pos_bol = 868;
                                pos_cnum = 880
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 23;
                                pos_bol = 868;
                                pos_cnum = 891
                              }
                          }))
             then None
             else
               Some
                 (Ortac_runtime.report "Record" "make 42"
                    (Ortac_runtime.Value
                       (Res
                          (integer,
                            (let r_old__014_ = Model.get state__010_ 0
                             and r_new__015_ =
                               lazy
                                 (Model.get (Lazy.force new_state__012_) 0) in
                             try (Lazy.force r_new__015_).value
                             with
                             | e ->
                                 raise
                                   (Ortac_runtime.Partial_function
                                      (e,
                                        {
                                          Ortac_runtime.start =
                                            {
                                              pos_fname = "record.mli";
                                              pos_lnum = 23;
                                              pos_bol = 868;
                                              pos_cnum = 884
                                            };
                                          Ortac_runtime.stop =
                                            {
                                              pos_fname = "record.mli";
                                              pos_lnum = 23;
                                              pos_bol = 868;
                                              pos_cnum = 891
                                            }
                                        })))))) "get"
                    [("i = r.value",
                       {
                         Ortac_runtime.start =
                           {
                             pos_fname = "record.mli";
                             pos_lnum = 23;
                             pos_bol = 868;
                             pos_cnum = 880
                           };
                         Ortac_runtime.stop =
                           {
                             pos_fname = "record.mli";
                             pos_lnum = 23;
                             pos_bol = 868;
                             pos_cnum = 891
                           }
                       })]))
            (Ortac_runtime.append
               (if
                  let r_old__022_ = Model.get state__010_ 0
                  and r_new__023_ =
                    lazy (Model.get (Lazy.force new_state__012_) 0) in
                  try
                    (plus1_1 (Ortac_runtime.Gospelstdlib.integer_of_int i_4))
                      =
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "record.mli";
                                   pos_lnum = 25;
                                   pos_bol = 912;
                                   pos_cnum = 924
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "record.mli";
                                   pos_lnum = 25;
                                   pos_bol = 912;
                                   pos_cnum = 939
                                 }
                             }))
                then None
                else
                  Some
                    (Ortac_runtime.report "Record" "make 42"
                       (Ortac_runtime.Value
                          (Res
                             (integer,
                               (let r_old__014_ = Model.get state__010_ 0
                                and r_new__015_ =
                                  lazy
                                    (Model.get (Lazy.force new_state__012_) 0) in
                                try (Lazy.force r_new__015_).value
                                with
                                | e ->
                                    raise
                                      (Ortac_runtime.Partial_function
                                         (e,
                                           {
                                             Ortac_runtime.start =
                                               {
                                                 pos_fname = "record.mli";
                                                 pos_lnum = 23;
                                                 pos_bol = 868;
                                                 pos_cnum = 884
                                               };
                                             Ortac_runtime.stop =
                                               {
                                                 pos_fname = "record.mli";
                                                 pos_lnum = 23;
                                                 pos_bol = 868;
                                                 pos_cnum = 891
                                               }
                                           })))))) "get"
                       [("plus1 i = i + 1",
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 25;
                                pos_bol = 912;
                                pos_cnum = 924
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 25;
                                pos_bol = 912;
                                pos_cnum = 939
                              }
                          })]))
               (if
                  let r_old__024_ = Model.get state__010_ 0
                  and r_new__025_ =
                    lazy (Model.get (Lazy.force new_state__012_) 0) in
                  try
                    (Ortac_runtime.Gospelstdlib.integer_of_int (plus2 i_4)) =
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 2))
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "record.mli";
                                   pos_lnum = 26;
                                   pos_bol = 940;
                                   pos_cnum = 952
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "record.mli";
                                   pos_lnum = 26;
                                   pos_bol = 940;
                                   pos_cnum = 967
                                 }
                             }))
                then None
                else
                  Some
                    (Ortac_runtime.report "Record" "make 42"
                       (Ortac_runtime.Value
                          (Res
                             (integer,
                               (let r_old__014_ = Model.get state__010_ 0
                                and r_new__015_ =
                                  lazy
                                    (Model.get (Lazy.force new_state__012_) 0) in
                                try (Lazy.force r_new__015_).value
                                with
                                | e ->
                                    raise
                                      (Ortac_runtime.Partial_function
                                         (e,
                                           {
                                             Ortac_runtime.start =
                                               {
                                                 pos_fname = "record.mli";
                                                 pos_lnum = 23;
                                                 pos_bol = 868;
                                                 pos_cnum = 884
                                               };
                                             Ortac_runtime.stop =
                                               {
                                                 pos_fname = "record.mli";
                                                 pos_lnum = 23;
                                                 pos_bol = 868;
                                                 pos_cnum = 891
                                               }
                                           })))))) "get"
                       [("plus2 i = i + 2",
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 26;
                                pos_bol = 940;
                                pos_cnum = 952
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "record.mli";
                                pos_lnum = 26;
                                pos_bol = 940;
                                pos_cnum = 967
                              }
                          })])))
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Record STM tests" 1 check_init_state
        ortac_show_cmd ortac_postcond])
