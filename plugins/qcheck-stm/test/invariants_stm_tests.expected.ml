(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Invariants
module Ortac_runtime = Ortac_runtime_qcheck_stm
module SUT =
  (Ortac_runtime.SUT.Make)(struct type sut = int t
                                  let init () = create 42 end)
module ModelElt =
  struct
    type nonrec elt = {
      contents: int Ortac_runtime.Gospelstdlib.sequence }
    let init =
      let a_1 = 42 in
      {
        contents =
          (try Ortac_runtime.Gospelstdlib.Sequence.singleton a_1
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "invariants.mli";
                            pos_lnum = 8;
                            pos_bol = 304;
                            pos_cnum = 329
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "invariants.mli";
                            pos_lnum = 8;
                            pos_bol = 304;
                            pos_cnum = 349
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 2
    type state = Model.t
    let init_state = Model.create 2 ()
    type cmd =
      | Create of int 
      | Push of int 
      | Transfer 
      | Copy 
      | Sub of int * int 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Create a_1 ->
          Format.asprintf "%s %a" "create" (Util.Pp.pp_int true) a_1
      | Push a_2 ->
          Format.asprintf "%s %a <sut>" "push" (Util.Pp.pp_int true) a_2
      | Transfer -> Format.asprintf "%s <sut> <sut>" "transfer"
      | Copy -> Format.asprintf "%s <sut>" "copy"
      | Sub (i, n) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "sub"
            (Util.Pp.pp_int true) i (Util.Pp.pp_int true) n
    let shrink_cmd cmd__002_ =
      let open QCheck in
        let open Shrink in
          let open Iter in
            match cmd__002_ with
            | Create a_1 -> map (fun a_1 -> Create a_1) (int a_1)
            | Push a_2 -> map (fun a_2 -> Push a_2) (int a_2)
            | Transfer -> empty
            | Copy -> empty
            | Sub (i, n) ->
                (map (fun i -> Sub (i, n)) (int i)) <+>
                  (map (fun n -> Sub (i, n)) (int n))
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd ~shrink:shrink_cmd
          (let open Gen in
             oneof
               [(pure (fun a_1 -> Create a_1)) <*> small_signed_int;
               (pure (fun a_2 -> Push a_2)) <*> int;
               pure Transfer;
               pure Copy;
               ((pure (fun i -> fun n -> Sub (i, n))) <*> int) <*> int])
    let next_state cmd__003_ state__004_ =
      match cmd__003_ with
      | Create a_1 ->
          let t_1__006_ =
            let open ModelElt in
              {
                contents =
                  (try Ortac_runtime.Gospelstdlib.Sequence.singleton a_1
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 8;
                                    pos_bol = 304;
                                    pos_cnum = 329
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 8;
                                    pos_bol = 304;
                                    pos_cnum = 349
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__004_ 0) t_1__006_
      | Push a_2 ->
          let t_2__007_ = Model.get state__004_ 0 in
          let t_2__008_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.cons a_2
                       t_2__007_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 13;
                                    pos_bol = 514;
                                    pos_cnum = 539
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 13;
                                    pos_bol = 514;
                                    pos_cnum = 571
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__004_ 1) t_2__008_
      | Transfer ->
          let t1__009_ = Model.get state__004_ 0
          and t2__010_ = Model.get state__004_ 1 in
          let t1__012_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.singleton
                       (Ortac_runtime.Gospelstdlib.Sequence.hd
                          t1__009_.contents)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 19;
                                    pos_bol = 778;
                                    pos_cnum = 804
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 19;
                                    pos_bol = 778;
                                    pos_cnum = 854
                                  }
                              })))
              }
          and t2__011_ =
            let open ModelElt in
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++)
                       (Ortac_runtime.Gospelstdlib.Sequence.tl
                          t1__009_.contents) t2__010_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 20;
                                    pos_bol = 855;
                                    pos_cnum = 911
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 20;
                                    pos_bol = 855;
                                    pos_cnum = 913
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__004_ 2) t2__011_)
            t1__012_
      | Copy ->
          let t_3__013_ = Model.get state__004_ 0 in
          let r__016_ =
            let open ModelElt in
              {
                contents =
                  (try t_3__013_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 24;
                                    pos_bol = 1109;
                                    pos_cnum = 1134
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 24;
                                    pos_bol = 1109;
                                    pos_cnum = 1144
                                  }
                              })))
              }
          and t_3__015_ = t_3__013_ in
          Model.push (Model.push (Model.drop_n state__004_ 1) t_3__015_)
            r__016_
      | Sub (i, n) ->
          let t_4__017_ = Model.get state__004_ 0 in
          if
            (try
               let __t1__021_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i) in
               let __t2__022_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      t_4__017_.contents) in
               __t1__021_ && __t2__022_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 28;
                              pos_bol = 1297;
                              pos_cnum = 1308
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 28;
                              pos_bol = 1297;
                              pos_cnum = 1344
                            }
                        })))
              &&
              ((try
                  let __t1__023_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int i)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n)) in
                  let __t2__024_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n))
                      (Ortac_runtime.Gospelstdlib.Sequence.length
                         t_4__017_.contents) in
                  __t1__023_ && __t2__024_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "invariants.mli";
                                 pos_lnum = 29;
                                 pos_bol = 1345;
                                 pos_cnum = 1356
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "invariants.mli";
                                 pos_lnum = 29;
                                 pos_bol = 1345;
                                 pos_cnum = 1396
                               }
                           })))
                 &&
                 ((try
                     Ortac_runtime.Gospelstdlib.(>=)
                       (Ortac_runtime.Gospelstdlib.integer_of_int n)
                       (Ortac_runtime.Gospelstdlib.integer_of_int 1)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 30;
                                    pos_bol = 1397;
                                    pos_cnum = 1408
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 30;
                                    pos_bol = 1397;
                                    pos_cnum = 1414
                                  }
                              })))))
          then
            let r_1__020_ =
              let open ModelElt in
                {
                  contents =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int n) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then Ortac_runtime.Gospelstdlib.Sequence.empty
                       else
                         Ortac_runtime.Gospelstdlib.__mix_Buddub
                           t_4__017_.contents
                           (Ortac_runtime.Gospelstdlib.integer_of_int i)
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int i)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int n))
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "invariants.mli";
                                      pos_lnum = 31;
                                      pos_bol = 1415;
                                      pos_cnum = 1440
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "invariants.mli";
                                      pos_lnum = 31;
                                      pos_bol = 1415;
                                      pos_cnum = 1494
                                    }
                                })))
                }
            and t_4__019_ = t_4__017_ in
            Model.push (Model.push (Model.drop_n state__004_ 1) t_4__019_)
              r_1__020_
          else state__004_
    let precond cmd__046_ state__047_ =
      match cmd__046_ with
      | Create a_1 -> true
      | Push a_2 -> true
      | Transfer -> true
      | Copy -> true
      | Sub (i, n) -> true
    let postcond _ _ _ = true
    let run cmd__048_ sut__049_ =
      match cmd__048_ with
      | Create a_1 ->
          Res
            (sut,
              (let res__050_ = create a_1 in
               (SUT.push sut__049_ res__050_; res__050_)))
      | Push a_2 ->
          Res
            (unit,
              (let t_2__051_ = SUT.pop sut__049_ in
               let res__052_ = push a_2 t_2__051_ in
               (SUT.push sut__049_ t_2__051_; res__052_)))
      | Transfer ->
          Res
            (unit,
              (let t1__053_ = SUT.pop sut__049_ in
               let t2__054_ = SUT.pop sut__049_ in
               let res__055_ = transfer t1__053_ t2__054_ in
               (SUT.push sut__049_ t2__054_;
                SUT.push sut__049_ t1__053_;
                res__055_)))
      | Copy ->
          Res
            (sut,
              (let t_3__056_ = SUT.pop sut__049_ in
               let res__057_ = copy t_3__056_ in
               (SUT.push sut__049_ t_3__056_;
                SUT.push sut__049_ res__057_;
                res__057_)))
      | Sub (i, n) ->
          Res
            ((result sut exn),
              (let t_4__058_ = SUT.pop sut__049_ in
               let res__059_ = protect (fun () -> sub t_4__058_ i n) () in
               (SUT.push sut__049_ t_4__058_;
                (match res__059_ with
                 | Ok res -> SUT.push sut__049_ res
                 | Error _ -> ());
                res__059_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () =
  let __state__060_ = Model.get Spec.init_state 0 in
  if
    not
      (try
         Ortac_runtime.Gospelstdlib.(>)
           (Ortac_runtime.Gospelstdlib.Sequence.length __state__060_.contents)
           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
       with
       | e ->
           raise
             (Ortac_runtime.Partial_function
                (e,
                  {
                    Ortac_runtime.start =
                      {
                        pos_fname = "invariants.mli";
                        pos_lnum = 4;
                        pos_bol = 114;
                        pos_cnum = 128
                      };
                    Ortac_runtime.stop =
                      {
                        pos_fname = "invariants.mli";
                        pos_lnum = 4;
                        pos_bol = 114;
                        pos_cnum = 158
                      }
                  })))
  then QCheck.Test.fail_report "INIT_SUT violates type invariants for SUT"
let ortac_show_cmd cmd__061_ state__062_ last__064_ res__063_ =
  let open Spec in
    let open STM in
      match (cmd__061_, res__063_) with
      | (Create a_1, Res ((SUT, _), t_1)) ->
          let lhs = if last__064_ then "r" else SUT.get_name state__062_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %a" lhs "create" (Util.Pp.pp_int true)
            a_1
      | (Push a_2, Res ((Unit, _), _)) ->
          let lhs = if last__064_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %a %s" lhs "push"
            (Util.Pp.pp_int true) a_2 (SUT.get_name state__062_ (0 + shift))
      | (Transfer, Res ((Unit, _), _)) ->
          let lhs = if last__064_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s %s" lhs "transfer"
            (SUT.get_name state__062_ (0 + shift))
            (SUT.get_name state__062_ (1 + shift))
      | (Copy, Res ((SUT, _), r)) ->
          let lhs = if last__064_ then "r" else SUT.get_name state__062_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "copy"
            (SUT.get_name state__062_ (0 + shift))
      | (Sub (i, n), Res ((Result (SUT, Exn), _), r_1)) ->
          let lhs =
            if last__064_
            then "r"
            else
              (match r_1 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__062_ 0)
               | Error _ -> "_")
          and shift = match r_1 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "sub" (SUT.get_name state__062_ (0 + shift))
            (Util.Pp.pp_int true) i (Util.Pp.pp_int true) n
      | _ -> assert false
let ortac_postcond cmd__025_ state__026_ res__027_ =
  let open Spec in
    let open STM in
      let new_state__028_ = lazy (next_state cmd__025_ state__026_) in
      match (cmd__025_, res__027_) with
      | (Create a_1, Res ((SUT, _), t_1)) ->
          if
            let t__029_ = lazy (Model.get (Lazy.force new_state__028_) 0) in
            (try
               Ortac_runtime.Gospelstdlib.(>)
                 (Ortac_runtime.Gospelstdlib.Sequence.length
                    (Lazy.force t__029_).contents)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 4;
                              pos_bol = 114;
                              pos_cnum = 128
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 4;
                              pos_bol = 114;
                              pos_cnum = 158
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Invariants" "create 42"
                 (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ())))
                 "create"
                 [("Sequence.length x.contents > 0",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "invariants.mli";
                          pos_lnum = 4;
                          pos_bol = 114;
                          pos_cnum = 128
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "invariants.mli";
                          pos_lnum = 4;
                          pos_bol = 114;
                          pos_cnum = 158
                        }
                    })])
      | (Push a_2, Res ((Unit, _), _)) ->
          if
            let t__030_ = lazy (Model.get (Lazy.force new_state__028_) 0) in
            (try
               Ortac_runtime.Gospelstdlib.(>)
                 (Ortac_runtime.Gospelstdlib.Sequence.length
                    (Lazy.force t__030_).contents)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 4;
                              pos_bol = 114;
                              pos_cnum = 128
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "invariants.mli";
                              pos_lnum = 4;
                              pos_bol = 114;
                              pos_cnum = 158
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Invariants" "create 42"
                 (Ortac_runtime.Value (Res (unit, ()))) "push"
                 [("Sequence.length x.contents > 0",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "invariants.mli";
                          pos_lnum = 4;
                          pos_bol = 114;
                          pos_cnum = 128
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "invariants.mli";
                          pos_lnum = 4;
                          pos_bol = 114;
                          pos_cnum = 158
                        }
                    })])
      | (Transfer, Res ((Unit, _), _)) ->
          Ortac_runtime.append
            (if
               let t1__032_ = lazy (Model.get (Lazy.force new_state__028_) 0) in
               try
                 Ortac_runtime.Gospelstdlib.(>)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      (Lazy.force t1__032_).contents)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
               with
               | e ->
                   raise
                     (Ortac_runtime.Partial_function
                        (e,
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 128
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 158
                              }
                          }))
             then None
             else
               Some
                 (Ortac_runtime.report "Invariants" "create 42"
                    (Ortac_runtime.Value (Res (unit, ()))) "transfer"
                    [("Sequence.length x.contents > 0",
                       {
                         Ortac_runtime.start =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 128
                           };
                         Ortac_runtime.stop =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 158
                           }
                       })]))
            (if
               let t2__033_ = lazy (Model.get (Lazy.force new_state__028_) 1) in
               try
                 Ortac_runtime.Gospelstdlib.(>)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      (Lazy.force t2__033_).contents)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
               with
               | e ->
                   raise
                     (Ortac_runtime.Partial_function
                        (e,
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 128
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 158
                              }
                          }))
             then None
             else
               Some
                 (Ortac_runtime.report "Invariants" "create 42"
                    (Ortac_runtime.Value (Res (unit, ()))) "transfer"
                    [("Sequence.length x.contents > 0",
                       {
                         Ortac_runtime.start =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 128
                           };
                         Ortac_runtime.stop =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 158
                           }
                       })]))
      | (Copy, Res ((SUT, _), r)) ->
          Ortac_runtime.append
            (if
               let r__036_ = lazy (Model.get (Lazy.force new_state__028_) 0) in
               try
                 Ortac_runtime.Gospelstdlib.(>)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      (Lazy.force r__036_).contents)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
               with
               | e ->
                   raise
                     (Ortac_runtime.Partial_function
                        (e,
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 128
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 158
                              }
                          }))
             then None
             else
               Some
                 (Ortac_runtime.report "Invariants" "create 42"
                    (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ())))
                    "copy"
                    [("Sequence.length x.contents > 0",
                       {
                         Ortac_runtime.start =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 128
                           };
                         Ortac_runtime.stop =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 158
                           }
                       })]))
            (if
               let t__037_ = lazy (Model.get (Lazy.force new_state__028_) 1) in
               try
                 Ortac_runtime.Gospelstdlib.(>)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      (Lazy.force t__037_).contents)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
               with
               | e ->
                   raise
                     (Ortac_runtime.Partial_function
                        (e,
                          {
                            Ortac_runtime.start =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 128
                              };
                            Ortac_runtime.stop =
                              {
                                pos_fname = "invariants.mli";
                                pos_lnum = 4;
                                pos_bol = 114;
                                pos_cnum = 158
                              }
                          }))
             then None
             else
               Some
                 (Ortac_runtime.report "Invariants" "create 42"
                    (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ())))
                    "copy"
                    [("Sequence.length x.contents > 0",
                       {
                         Ortac_runtime.start =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 128
                           };
                         Ortac_runtime.stop =
                           {
                             pos_fname = "invariants.mli";
                             pos_lnum = 4;
                             pos_bol = 114;
                             pos_cnum = 158
                           }
                       })]))
      | (Sub (i, n), Res ((Result (SUT, Exn), _), r_1)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__041_ = Model.get state__026_ 0 in
                      try
                        let __t1__042_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                        let __t2__043_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i)
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__041_.contents) in
                        __t1__042_ && __t2__043_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 28;
                                       pos_bol = 1297;
                                       pos_cnum = 1308
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 28;
                                       pos_bol = 1297;
                                       pos_cnum = 1344
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Invariants" "create 42"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1297;
                                    pos_cnum = 1308
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "invariants.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1297;
                                    pos_cnum = 1344
                                  }
                              })]))
                   (Ortac_runtime.append
                      (if
                         let tmp__041_ = Model.get state__026_ 0 in
                         try
                           let __t1__044_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n)) in
                           let __t2__045_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__041_.contents) in
                           __t1__044_ && __t2__045_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 29;
                                          pos_bol = 1345;
                                          pos_cnum = 1356
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 29;
                                          pos_bol = 1345;
                                          pos_cnum = 1396
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Invariants" "create 42"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("i <= i + n <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 29;
                                       pos_bol = 1345;
                                       pos_cnum = 1356
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 29;
                                       pos_bol = 1345;
                                       pos_cnum = 1396
                                     }
                                 })]))
                      (if
                         let tmp__041_ = Model.get state__026_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(>=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int n)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 1)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 30;
                                          pos_bol = 1397;
                                          pos_cnum = 1408
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 30;
                                          pos_bol = 1397;
                                          pos_cnum = 1414
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Invariants" "create 42"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("n >= 1",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 30;
                                       pos_bol = 1397;
                                       pos_cnum = 1408
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 30;
                                       pos_bol = 1397;
                                       pos_cnum = 1414
                                     }
                                 })])))
           with
           | None ->
               (match r_1 with
                | Ok r_1 ->
                    Ortac_runtime.append
                      (if
                         let r__039_ =
                           lazy (Model.get (Lazy.force new_state__028_) 0) in
                         try
                           Ortac_runtime.Gospelstdlib.(>)
                             (Ortac_runtime.Gospelstdlib.Sequence.length
                                (Lazy.force r__039_).contents)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 4;
                                          pos_bol = 114;
                                          pos_cnum = 128
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 4;
                                          pos_bol = 114;
                                          pos_cnum = 158
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Invariants" "create 42"
                              (Ortac_runtime.Protected_value
                                 (Res (Ortac_runtime.dummy, ()))) "sub"
                              [("Sequence.length x.contents > 0",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 4;
                                       pos_bol = 114;
                                       pos_cnum = 128
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 4;
                                       pos_bol = 114;
                                       pos_cnum = 158
                                     }
                                 })]))
                      (if
                         let t__040_ =
                           lazy (Model.get (Lazy.force new_state__028_) 1) in
                         try
                           Ortac_runtime.Gospelstdlib.(>)
                             (Ortac_runtime.Gospelstdlib.Sequence.length
                                (Lazy.force t__040_).contents)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 4;
                                          pos_bol = 114;
                                          pos_cnum = 128
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 4;
                                          pos_bol = 114;
                                          pos_cnum = 158
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Invariants" "create 42"
                              (Ortac_runtime.Protected_value
                                 (Res (Ortac_runtime.dummy, ()))) "sub"
                              [("Sequence.length x.contents > 0",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 4;
                                       pos_bol = 114;
                                       pos_cnum = 128
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 4;
                                       pos_bol = 114;
                                       pos_cnum = 158
                                     }
                                 })]))
                | _ -> None)
           | _ ->
               (match r_1 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__041_ = Model.get state__026_ 0 in
                         try
                           let __t1__042_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                           let __t2__043_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i)
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__041_.contents) in
                           __t1__042_ && __t2__043_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 28;
                                          pos_bol = 1297;
                                          pos_cnum = 1308
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 28;
                                          pos_bol = 1297;
                                          pos_cnum = 1344
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Invariants" "create 42"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("0 <= i <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 28;
                                       pos_bol = 1297;
                                       pos_cnum = 1308
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "invariants.mli";
                                       pos_lnum = 28;
                                       pos_bol = 1297;
                                       pos_cnum = 1344
                                     }
                                 })]))
                      (Ortac_runtime.append
                         (if
                            let tmp__041_ = Model.get state__026_ 0 in
                            try
                              let __t1__044_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i)
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        i)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        n)) in
                              let __t2__045_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        i)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        n))
                                  (Ortac_runtime.Gospelstdlib.Sequence.length
                                     tmp__041_.contents) in
                              __t1__044_ && __t2__045_
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "invariants.mli";
                                             pos_lnum = 29;
                                             pos_bol = 1345;
                                             pos_cnum = 1356
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "invariants.mli";
                                             pos_lnum = 29;
                                             pos_bol = 1345;
                                             pos_cnum = 1396
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Invariants" "create 42"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "sub"
                                 [("i <= i + n <= Sequence.length t.contents",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 29;
                                          pos_bol = 1345;
                                          pos_cnum = 1356
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 29;
                                          pos_bol = 1345;
                                          pos_cnum = 1396
                                        }
                                    })]))
                         (if
                            let tmp__041_ = Model.get state__026_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(>=)
                                (Ortac_runtime.Gospelstdlib.integer_of_int n)
                                (Ortac_runtime.Gospelstdlib.integer_of_int 1)
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "invariants.mli";
                                             pos_lnum = 30;
                                             pos_bol = 1397;
                                             pos_cnum = 1408
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "invariants.mli";
                                             pos_lnum = 30;
                                             pos_bol = 1397;
                                             pos_cnum = 1414
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Invariants" "create 42"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "sub"
                                 [("n >= 1",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 30;
                                          pos_bol = 1397;
                                          pos_cnum = 1408
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "invariants.mli";
                                          pos_lnum = 30;
                                          pos_bol = 1397;
                                          pos_cnum = 1414
                                        }
                                    })])))))
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Invariants STM tests" 2
        check_init_state ortac_show_cmd ortac_postcond])
